<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Brewlin&#39;s Wiki</title>
  
  <subtitle>found everthing</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wiki.brewlin.com/"/>
  <updated>2020-02-03T12:39:32.057Z</updated>
  <id>http://wiki.brewlin.com/</id>
  
  <author>
    <name>brewlin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/core/core/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/core/core/</id>
    <published>2020-02-03T12:39:32.057Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="core" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/core/"/>
    
    
  </entry>
  
  <entry>
    <title>discovery</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/discovery/discovery/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/discovery/discovery/</id>
    <published>2020-01-31T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="env-配置文件"><a href="#env-配置文件" class="headerlink" title="@env 配置文件"></a>@env 配置文件</h2><p>discovery.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">'consul'</span> =&gt; [</span><br><span class="line">        <span class="string">'address'</span> =&gt; env(<span class="string">"DISCOVERY_ADDRESS"</span>,<span class="string">"127.0.0.1"</span>),</span><br><span class="line">        <span class="string">'port'</span>    =&gt; env(<span class="string">"DISCOVERY_PORT"</span>,<span class="string">"8500"</span>),</span><br><span class="line">        <span class="string">'register'</span> =&gt; [</span><br><span class="line">            <span class="string">'ID'</span>                =&gt; <span class="string">''</span>,</span><br><span class="line">            <span class="comment">//只注册了grpc 服务，其他都是私有的</span></span><br><span class="line">            <span class="comment">//tcp 和websocket   通过nginx负载均衡即可</span></span><br><span class="line">            <span class="string">'Name'</span>              =&gt; <span class="string">'grpc-im-cloud-node'</span>,</span><br><span class="line">            <span class="string">'Tags'</span>              =&gt; [],</span><br><span class="line">            <span class="string">'enableTagOverride'</span>=&gt; <span class="keyword">false</span>,</span><br><span class="line">            <span class="string">'Address'</span>           =&gt; env(<span class="string">"APP_HOST"</span>,<span class="string">"127.0.0.1"</span>),</span><br><span class="line">            <span class="string">'Port'</span>              =&gt; (int)env(<span class="string">"GRPC_PORT"</span>,<span class="number">9500</span>),</span><br><span class="line">            <span class="string">'Check'</span>             =&gt; [</span><br><span class="line">                <span class="string">'id'</span>       =&gt; <span class="string">''</span>,</span><br><span class="line">                <span class="string">'name'</span>     =&gt; <span class="string">''</span>,</span><br><span class="line">                <span class="string">'http'</span>      =&gt; <span class="string">"http://127.0.0.1:"</span>.env(<span class="string">'DISCOVERY_CHECK_PORT'</span>,<span class="number">9500</span>).<span class="string">"/health"</span>,</span><br><span class="line">                <span class="string">'interval'</span> =&gt; <span class="string">"10s"</span>,</span><br><span class="line">                <span class="string">'timeout'</span>  =&gt; <span class="string">"10s"</span>,</span><br><span class="line">            ],</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">'discovery'</span> =&gt; [</span><br><span class="line">            <span class="string">'name'</span> =&gt; <span class="string">'grpc-im-logic-node'</span>,</span><br><span class="line">            <span class="string">'dc'</span> =&gt; <span class="string">'dc1'</span>,</span><br><span class="line">            <span class="string">'near'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">            <span class="string">'tag'</span> =&gt;<span class="string">''</span>,</span><br><span class="line">            <span class="string">'passing'</span> =&gt; <span class="keyword">true</span></span><br><span class="line">        ]</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure></p><h2 id="register-注册服务"><a href="#register-注册服务" class="headerlink" title="@register 注册服务"></a>@register 注册服务</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$registerStatus = provider()-&gt;select()-&gt;registerService();</span><br><span class="line"><span class="keyword">if</span>(!$registerStatus)&#123;</span><br><span class="line">    CLog::error(<span class="string">"consul register false sleep 1 sec to reregiseter"</span>);</span><br><span class="line">    Coroutine::sleep(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="deregister-注销节点"><a href="#deregister-注销节点" class="headerlink" title="@deregister 注销节点"></a>@deregister 注销节点</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注销节点</span></span><br><span class="line">$discovery = config(<span class="string">"discovery"</span>);</span><br><span class="line">provider()-&gt;select()-&gt;deregisterService($discovery[<span class="string">'consul'</span>][<span class="string">"register"</span>][<span class="string">'Name'</span>]);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;env-配置文件&quot;&gt;&lt;a href=&quot;#env-配置文件&quot; class=&quot;headerlink&quot; title=&quot;@env 配置文件&quot;&gt;&lt;/a&gt;@env 配置文件&lt;/h2&gt;&lt;p&gt;discovery.php&lt;br&gt;&lt;figure class=&quot;highlight ph
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="discovery" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/discovery/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="discovery" scheme="http://wiki.brewlin.com/tags/discovery/"/>
    
  </entry>
  
  <entry>
    <title>db</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/database/db/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/database/db/</id>
    <published>2020-01-29T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置结果集为-array"><a href="#设置结果集为-array" class="headerlink" title="@设置结果集为 array"></a>@设置结果集为 array</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Core</span>\<span class="title">Event</span>\<span class="title">EventDispatcherInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Core</span>\<span class="title">Event</span>\<span class="title">EventEnum</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Core</span>\<span class="title">Event</span>\<span class="title">Mapping</span>\<span class="title">Event</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Hyperf</span>\<span class="title">Database</span>\<span class="title">Events</span>\<span class="title">StatementPrepared</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PDO</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Event</span>(alias=EventEnum::DbFetchMode)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FetchModeEvent</span> <span class="keyword">implements</span> <span class="title">EventDispatcherInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $event</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dispatch</span><span class="params">(...$param)</span></span>&#123;</span><br><span class="line">        $event = $param[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span> ($event <span class="keyword">instanceof</span> StatementPrepared) &#123;</span><br><span class="line">            $event-&gt;statement-&gt;setFetchMode(PDO::FETCH_ASSOC);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;设置结果集为-array&quot;&gt;&lt;a href=&quot;#设置结果集为-array&quot; class=&quot;headerlink&quot; title=&quot;@设置结果集为 array&quot;&gt;&lt;/a&gt;@设置结果集为 array&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="database" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/database/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="database" scheme="http://wiki.brewlin.com/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>queue</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/queue/queue/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/queue/queue/</id>
    <published>2020-01-28T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="producer-生产数据"><a href="#producer-生产数据" class="headerlink" title="@producer 生产数据"></a>@producer 生产数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Lib</span>\<span class="title">Producer</span>;</span><br><span class="line"><span class="comment">/** <span class="doctag">@var</span> Producer $producers */</span></span><br><span class="line">$producers = \bean(Producer::class);</span><br><span class="line"><span class="comment">//发送到队列里</span></span><br><span class="line">producer()-&gt;produce($producers-&gt;producer($pushmsg));</span><br></pre></td></tr></table></figure><h2 id="consumer-消费队列数据"><a href="#consumer-消费队列数据" class="headerlink" title="@consumer 消费队列数据"></a>@consumer 消费队列数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">ImQueue</span>\<span class="title">Amqp</span>\<span class="title">Message</span>\<span class="title">ConsumerMessage</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">ImQueue</span>\<span class="title">Amqp</span>\<span class="title">Result</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Class Consumer</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span> App\Lib</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> <span class="keyword">extends</span> <span class="title">ConsumerMessage</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;setExchange(env(<span class="string">"EXCHANGE"</span>));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;setQueue(env(<span class="string">"QUEUE"</span>));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;setRoutingKey(env(<span class="string">"ROUTE_KEY"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 主流程消费数据入口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> PushMsg $data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">consume</span><span class="params">($data)</span>: <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result::ACK;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重新排队</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isRequeue</span><span class="params">()</span>: <span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;producer-生产数据&quot;&gt;&lt;a href=&quot;#producer-生产数据&quot; class=&quot;headerlink&quot; title=&quot;@producer 生产数据&quot;&gt;&lt;/a&gt;@producer 生产数据&lt;/h2&gt;&lt;figure class=&quot;highlight ph
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="queue" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/queue/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="queue" scheme="http://wiki.brewlin.com/tags/queue/"/>
    
  </entry>
  
  <entry>
    <title>grpc</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/grpc/grpc/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/grpc/grpc/</id>
    <published>2020-01-27T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="build"><a href="#build" class="headerlink" title="@build"></a>@build</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; cd pkg/grpc/bin</span><br><span class="line">&gt; sh  gen.sh</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><h2 id="method-grpc-调用"><a href="#method-grpc-调用" class="headerlink" title="@method grpc 调用"></a>@method grpc 调用</h2><p>组件封装有连接池机制，复用多个连接<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Grpc</span>\<span class="title">Client</span>\<span class="title">GrpcLogicClient</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Im</span>\<span class="title">Cloud</span>\<span class="title">Operation</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Im</span>\<span class="title">Logic</span>\<span class="title">HeartbeatReq</span>;</span><br><span class="line"></span><br><span class="line">$heartBeatReq = <span class="keyword">new</span> HeartbeatReq();</span><br><span class="line">$host = env(<span class="string">"APP_HOST"</span>,<span class="string">"127.0.0.1"</span>).<span class="string">":"</span>.env(<span class="string">"GRPC_PORT"</span>,<span class="number">9500</span>);</span><br><span class="line">$heartBeatReq-&gt;setServer($host);</span><br><span class="line">$heartBeatReq-&gt;setKey($key);</span><br><span class="line">$heartBeatReq-&gt;setMid($mid);</span><br><span class="line">GrpcLogicClient::Heartbeat($grpcServer,$heartBeatReq);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;build&quot;&gt;&lt;a href=&quot;#build&quot; class=&quot;headerlink&quot; title=&quot;@build&quot;&gt;&lt;/a&gt;@build&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="grpc" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/grpc/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="grpc" scheme="http://wiki.brewlin.com/tags/grpc/"/>
    
  </entry>
  
  <entry>
    <title>memory</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/memeory/memeory/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/memeory/memeory/</id>
    <published>2020-01-26T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="construct"><a href="#construct" class="headerlink" title="@construct"></a>@construct</h2><p>使用bean注解自动注入到container中，在swoole启动前就需要申请好内存并初始化，所以需要使用bean注解<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Core</span>\<span class="title">Container</span>\<span class="title">Mapping</span>\<span class="title">Bean</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Memory</span>\<span class="title">Table</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Memory</span>\<span class="title">Table</span>\<span class="title">Type</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Memory</span>\<span class="title">Table</span>\<span class="title">MemoryTable</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Bean</span>()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CloudClient</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> $table = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CloudClient constructor.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $memorySize = (int)env(<span class="string">"MEMORY_TABLE"</span>,<span class="number">1000</span>);</span><br><span class="line">        $column = [</span><br><span class="line">            <span class="string">"Address"</span> =&gt; [Type::String,<span class="number">20</span>],</span><br><span class="line">            <span class="string">"Port"</span>    =&gt; [Type::String,<span class="number">10</span>],</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">self</span>::$table = Table::create($memorySize,$column);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Table：：create-创建共享内存"><a href="#Table：：create-创建共享内存" class="headerlink" title="@Table：：create 创建共享内存"></a>@Table：：create 创建共享内存</h2><ul><li>size  内存大小</li><li>column 数据结构</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;construct&quot;&gt;&lt;a href=&quot;#construct&quot; class=&quot;headerlink&quot; title=&quot;@construct&quot;&gt;&lt;/a&gt;@construct&lt;/h2&gt;&lt;p&gt;使用bean注解自动注入到container中，在swoole启动前就需要申请好
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="memeory" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/memeory/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="memory" scheme="http://wiki.brewlin.com/tags/memory/"/>
    
  </entry>
  
  <entry>
    <title>process</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/process/process/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/process/process/</id>
    <published>2020-01-25T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="construct"><a href="#construct" class="headerlink" title="@construct"></a>@construct</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Process</span>\<span class="title">Contract</span>\<span class="title">AbstractProcess</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoProcess</span> <span class="keyword">extends</span> <span class="title">AbstractProcess</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="string">"process_name"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">()</span>: <span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义子进程 执行入口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Process $process</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">(Process $process)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="register-注册自定义进程"><a href="#register-注册自定义进程" class="headerlink" title="@register 注册自定义进程"></a>@register 注册自定义进程</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ProcessManager::register(<span class="string">"demo-process"</span>,<span class="keyword">new</span> DemoProcess());</span><br></pre></td></tr></table></figure><h2 id="start-启动"><a href="#start-启动" class="headerlink" title="@start 启动"></a>@start 启动</h2><p>主动伴随swoole进程模型启动，交由swoole mangager进程管理</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;construct&quot;&gt;&lt;a href=&quot;#construct&quot; class=&quot;headerlink&quot; title=&quot;@construct&quot;&gt;&lt;/a&gt;@construct&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="process" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/process/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="process" scheme="http://wiki.brewlin.com/tags/process/"/>
    
  </entry>
  
  <entry>
    <title>redis</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/redis/redis/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/redis/redis/</id>
    <published>2020-01-23T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="class"><a href="#class" class="headerlink" title="@class"></a>@class</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Redis::hSet(<span class="string">"hkey"</span>,$key,$server);</span><br></pre></td></tr></table></figure><h2 id="api"><a href="#api" class="headerlink" title="@api"></a>@api</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">* @method <span class="keyword">static</span> int append(string $key, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> blPop(<span class="keyword">array</span> $keys, int $timeout)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> brPop(<span class="keyword">array</span> $keys, int $timeout)</span><br><span class="line">* @method <span class="keyword">static</span> string brpoplpush(string $srcKey, string $dstKey, int $timeout)</span><br><span class="line">* @method <span class="keyword">static</span> string decr(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int decrBy(string $key, int $value)</span><br><span class="line">* @method <span class="keyword">static</span> mixed <span class="keyword">eval</span>(string $script, <span class="keyword">array</span> $args = [], int $numKeys = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> mixed evalSha(string $scriptSha, <span class="keyword">array</span> $args = [], int $numKeys = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> bool exists(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int geoAdd(string $key, float $longitude, float $latitude, string $member)</span><br><span class="line">* @method <span class="keyword">static</span> float geoDist(string $key, string $member1, string $member2, string $unit = <span class="string">'m'</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> geohash(string $key, string $member1, string $member2 = <span class="keyword">null</span>, string $memberN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> geopos(string $key, string $member1, string $member2 = <span class="keyword">null</span>, string $memberN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> mixed|bool get(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int getBit(string $key, int $offset)</span><br><span class="line">* @method <span class="keyword">static</span> int getOption(string $name)</span><br><span class="line">* @method <span class="keyword">static</span> string getRange(string $key, int $start, int $end)</span><br><span class="line">* @method <span class="keyword">static</span> string getSet(string $key, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> string hDel(string $key, string $hashKey1, string $hashKey2 = <span class="keyword">null</span>, string $hashKeyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> bool hExists(string $key, string $hashKey)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> hGet(string $key, <span class="keyword">array</span> $hashKey)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> hGetAll(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int hIncrBy(string $key, string $hashKey, int $value)</span><br><span class="line">* @method <span class="keyword">static</span> float hIncrByFloat(string $key, string $field, float $increment)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> hKeys(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int hLen(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int hSet(string $key, string $hashKey, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> bool hSetNx(string $key, string $hashKey, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> hVals(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> hScan(string $key, int &amp;$iterator, string $pattern = <span class="keyword">null</span>, int $count = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int incr(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int incrBy(string $key, int $value)</span><br><span class="line">* @method <span class="keyword">static</span> float incrByFloat(string $key, float $increment)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> info(string $option = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> string|bool lGet(string $key, int $index)</span><br><span class="line">* @method <span class="keyword">static</span> int lInsert(string $key, int $position, string $pivot, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> string|bool lPop(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int|bool lPush(string $key, string $value1, string $value2 = <span class="keyword">null</span>, string $valueN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int|bool lPushx(string $key, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> bool lSet(string $key, int $index, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> int msetnx(<span class="keyword">array</span> $array)</span><br><span class="line">* @method <span class="keyword">static</span> bool persist(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> bool pExpire(string $key, int $ttl)</span><br><span class="line">* @method <span class="keyword">static</span> bool pExpireAt(string $key, int $timestamp)</span><br><span class="line">* @method <span class="keyword">static</span> bool psetex(string $key, int $ttl, $value)</span><br><span class="line">* @method <span class="keyword">static</span> int pttl(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> string rPop(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int|bool rPush(string $key, string $value1, string $value2 = <span class="keyword">null</span>, string $valueN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int|bool rPushx(string $key, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> mixed rawCommand(string|<span class="keyword">array</span> $nodeParams, string $command, mixed $arguments)</span><br><span class="line">* @method <span class="keyword">static</span> bool renameNx(string $srcKey, string $dstKey)</span><br><span class="line">* @method <span class="keyword">static</span> bool restore(string $key, int $ttl, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> string rpoplpush(string $srcKey, string $dstKey)</span><br><span class="line">* @method <span class="keyword">static</span> int sAdd(string $key, string $value1, string $value2 = <span class="keyword">null</span>, string $valueN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int sAddArray(string $key, <span class="keyword">array</span> $valueArray)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> sDiff(string $key1, string $key2, string $keyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int sDiffStore(string $dstKey, string $key1, string $key2, string $keyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> sInter(string $key1, string $key2, string $keyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int|bool sInterStore(string $dstKey, string $key1, string $key2, string $keyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> sMembers(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> bool sMove(string $srcKey, string $dstKey, string $member)</span><br><span class="line">* @method <span class="keyword">static</span> string|bool sPop(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> string|<span class="keyword">array</span>|bool sRandMember(string $key, int $count = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> sUnion(string $key1, string $key2, string $keyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int sUnionStore(string $dstKey, string $key1, string $key2, string $keyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span>|bool scan(int &amp;$iterator, string $pattern = <span class="keyword">null</span>, int $count = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> mixed script(string|<span class="keyword">array</span> $nodeParams, string $command, string $script)</span><br><span class="line">* @method <span class="keyword">static</span> bool set(string $key, $value, int $timeout = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int setBit(string $key, int $offset, int $value)</span><br><span class="line">* @method <span class="keyword">static</span> string setRange(string $key, int $offset, $value)</span><br><span class="line">* @method <span class="keyword">static</span> int setex(string $key, int $ttl, $value)</span><br><span class="line">* @method <span class="keyword">static</span> bool setnx(string $key, $value)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> sort(string $key, <span class="keyword">array</span> $option = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> sScan(string $key, int &amp;$iterator, string $pattern = <span class="keyword">null</span>, int $count = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int strlen(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int ttl(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int type(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> void unwatch()</span><br><span class="line">* @method <span class="keyword">static</span> void watch(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int zCard(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int zCount(string $key, int $start, int $end)</span><br><span class="line">* @method <span class="keyword">static</span> float zIncrBy(string $key, float $value, string $member)</span><br><span class="line">* @method <span class="keyword">static</span> int zLexCount(string $key, int $min, int $max)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRange(string $key, int $start, int $end, bool $withscores = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRangeByLex(string $key, int $min, int $max, int $offset = <span class="keyword">null</span>, int $limit = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRangeByScore(string $key, string $start, string $end, <span class="keyword">array</span> $options = [])</span><br><span class="line">* @method <span class="keyword">static</span> int zRank(string $key, string $member)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRemRangeByLex(string $key, int $min, int $max)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRevRange(string $key, int $start, int $end, bool $withscore = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRevRangeByLex(string $key, int $min, int $max, int $offset = <span class="keyword">null</span>, int $limit = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRevRangeByScore(string $key, int $start, int $end, <span class="keyword">array</span> $options = [])</span><br><span class="line">* @method <span class="keyword">static</span> int zRevRank(string $key, string $member)</span><br><span class="line">* @method <span class="keyword">static</span> float zScore(string $key, float $member)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zScan(string $key, int &amp;$iterator, string $pattern = <span class="keyword">null</span>, int $count = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int del(string $key1, string $key2 = <span class="keyword">null</span>, string $key3 = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> bool expire(string $key, int $ttl)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> keys(string $pattern)</span><br><span class="line">* @method <span class="keyword">static</span> int lLen(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> string|bool lIndex(string $key, int $index)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> lRange(string $key, int $start, int $end)</span><br><span class="line">* @method <span class="keyword">static</span> int|bool lRem(string $key, string $value, int $count)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span>|bool lTrim(string $key, int $start, int $stop)</span><br><span class="line">* @method <span class="keyword">static</span> bool rename(string $srcKey, string $dstKey)</span><br><span class="line">* @method <span class="keyword">static</span> int sCard(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> bool sIsMember(string $key, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> int sRem(string $key, string $member1, string $member2 = <span class="keyword">null</span>, string $memberN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int zRem(string $key, string $member1, string $member2 = <span class="keyword">null</span>, string $memberN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int zRemRangeByRank(string $key, int $start, int $end)</span><br><span class="line">* @method <span class="keyword">static</span> int zRemRangeByScore(string $key, float|string $start, float|string $end)</span><br><span class="line">* @method <span class="keyword">static</span> int zInterStore(string $Output, <span class="keyword">array</span> $ZSetKeys, <span class="keyword">array</span> $Weights = <span class="keyword">null</span>, string $aggregateFunction = <span class="string">'SUM'</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int zUnionStore(string $Output, <span class="keyword">array</span> $ZSetKeys, <span class="keyword">array</span> $Weights = <span class="keyword">null</span>, string $aggregateFunction = <span class="string">'SUM'</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> hMGet(string $key, <span class="keyword">array</span> $keys)</span><br><span class="line">* @method <span class="keyword">static</span> bool hMSet(string $key, <span class="keyword">array</span> $keyValues)</span><br><span class="line">* @method <span class="keyword">static</span> int zAdd(string $key, <span class="keyword">array</span> $scoreValues)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> mget(<span class="keyword">array</span> $keys)</span><br><span class="line">* @method <span class="keyword">static</span> bool mset(<span class="keyword">array</span> $keyValues, int $ttl = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> pipeline(callable $callback)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> transaction(callable $callback)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;class&quot;&gt;&lt;a href=&quot;#class&quot; class=&quot;headerlink&quot; title=&quot;@class&quot;&gt;&lt;/a&gt;@class&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="redis" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/redis/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="redis" scheme="http://wiki.brewlin.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>log</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/log/log/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/log/log/</id>
    <published>2020-01-22T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Log-输出到日志文件-amp-amp-Clog-输出到终端"><a href="#Log-输出到日志文件-amp-amp-Clog-输出到终端" class="headerlink" title="@Log  输出到日志文件 &amp;&amp; Clog 输出到终端"></a>@Log  输出到日志文件 &amp;&amp; Clog 输出到终端</h2><h2 id="emergency-level"><a href="#emergency-level" class="headerlink" title="@emergency level"></a>@emergency level</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Log::emergency(message,param);</span><br><span class="line">CLog::emergency(message,param);</span><br></pre></td></tr></table></figure><h2 id="info-level"><a href="#info-level" class="headerlink" title="@info level"></a>@info level</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Log::info(message,param);</span><br><span class="line">CLog::info(message,param);</span><br></pre></td></tr></table></figure><h2 id="error-level"><a href="#error-level" class="headerlink" title="@error level"></a>@error level</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Log::error(message,param);</span><br><span class="line">CLog::error(message,param);</span><br></pre></td></tr></table></figure><h2 id="debug-level"><a href="#debug-level" class="headerlink" title="@debug level"></a>@debug level</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Log::debug(message,param);</span><br><span class="line">CLog::debug(message,param);</span><br></pre></td></tr></table></figure><h2 id="alert-level"><a href="#alert-level" class="headerlink" title="@alert level"></a>@alert level</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Log::alert(message,param);</span><br><span class="line">CLog::alert(message,param);</span><br></pre></td></tr></table></figure><h2 id="warning-level"><a href="#warning-level" class="headerlink" title="@warning level"></a>@warning level</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Log::warning(message,param);</span><br><span class="line">CLog::warning(message,param);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Log-输出到日志文件-amp-amp-Clog-输出到终端&quot;&gt;&lt;a href=&quot;#Log-输出到日志文件-amp-amp-Clog-输出到终端&quot; class=&quot;headerlink&quot; title=&quot;@Log  输出到日志文件 &amp;amp;&amp;amp; Clog 输出
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="log" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/log/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="log" scheme="http://wiki.brewlin.com/tags/log/"/>
    
  </entry>
  
  <entry>
    <title>task</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/task/task/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/task/task/</id>
    <published>2020-01-21T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="composer"><a href="#composer" class="headerlink" title="@composer"></a>@composer</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"require"</span>:&#123;</span><br><span class="line">    <span class="string">"brewlin/im-task"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="class"><a href="#class" class="headerlink" title="@class"></a>@class</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="diliver-发送异步任务"><a href="#diliver-发送异步任务" class="headerlink" title="@diliver 发送异步任务"></a>@diliver 发送异步任务</h2><p>通过<code>deliver</code>方法可以直接在task进程中执行对应object的方法到达异步执行任务<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">namespace</span> <span class="title">example</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** <span class="doctag">@var</span> Task $task */</span></span><br><span class="line">\bean(Task::class)-&gt;deliver(example::class,<span class="string">"method"</span>,[arg1,arg2,arg3.....]);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;composer&quot;&gt;&lt;a href=&quot;#composer&quot; class=&quot;headerlink&quot; title=&quot;@composer&quot;&gt;&lt;/a&gt;@composer&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="task" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/task/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="corotinue" scheme="http://wiki.brewlin.com/tags/corotinue/"/>
    
      <category term="task" scheme="http://wiki.brewlin.com/tags/task/"/>
    
  </entry>
  
  <entry>
    <title>runtime</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/hook/runtime/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/hook/runtime/</id>
    <published>2020-01-13T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Lib-runtime-enableCorutine-启动hook机制"><a href="#Lib-runtime-enableCorutine-启动hook机制" class="headerlink" title="Lib\runtime::enableCorutine 启动hook机制"></a><code>Lib\runtime::enableCorutine</code> 启动hook机制</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">Lib\Runtime::enableCoroutine();</span><br><span class="line"></span><br><span class="line">cgo(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sleep(<span class="number">1</span>); <span class="comment">// == Cco::sleep(1);</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Lib-runtime-enableCorutine-启动hook机制&quot;&gt;&lt;a href=&quot;#Lib-runtime-enableCorutine-启动hook机制&quot; class=&quot;headerlink&quot; title=&quot;Lib\runtime::enableCor
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="hook" scheme="http://wiki.brewlin.com/categories/c-ext/hook/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="hook" scheme="http://wiki.brewlin.com/tags/hook/"/>
    
      <category term="runtime" scheme="http://wiki.brewlin.com/tags/runtime/"/>
    
  </entry>
  
  <entry>
    <title>sleep</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/hook/sleep/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/hook/sleep/</id>
    <published>2020-01-13T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<p>在扩展内替换原生php内置sleep函数，使原有基于sleep的代码自动进行替换为协程<code>Cco::sleep()</code>调用</p><h2 id="协程sleep"><a href="#协程sleep" class="headerlink" title="@协程sleep"></a>@协程sleep</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cgo(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Cco::sleep(<span class="number">1</span>);<span class="comment">//协程切换</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="原生sleep"><a href="#原生sleep" class="headerlink" title="@原生sleep"></a>@原生sleep</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cgo(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sleep(<span class="number">1</span>);<span class="comment">//进程阻塞</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="hook-sleep"><a href="#hook-sleep" class="headerlink" title="@hook sleep"></a>@hook sleep</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Lib\Runtime::enableCoroutine();</span><br><span class="line">cgo(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sleep(<span class="number">1</span>);<span class="comment">//协程切换</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在扩展内替换原生php内置sleep函数，使原有基于sleep的代码自动进行替换为协程&lt;code&gt;Cco::sleep()&lt;/code&gt;调用&lt;/p&gt;
&lt;h2 id=&quot;协程sleep&quot;&gt;&lt;a href=&quot;#协程sleep&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="hook" scheme="http://wiki.brewlin.com/categories/c-ext/hook/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="hook" scheme="http://wiki.brewlin.com/tags/hook/"/>
    
      <category term="sleep" scheme="http://wiki.brewlin.com/tags/sleep/"/>
    
  </entry>
  
  <entry>
    <title>协程socket</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/coroutine/%E5%8D%8F%E7%A8%8Bsocket/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/coroutine/协程socket/</id>
    <published>2020-01-12T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<p>创建协程版socket，封装所有协程api，所有阻塞操作都会触发协程切换</p><h2 id="Lib-Coroutine-Socket"><a href="#Lib-Coroutine-Socket" class="headerlink" title="@Lib\Coroutine\Socket"></a>@Lib\Coroutine\Socket</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">lib_event_init();</span><br><span class="line"></span><br><span class="line">cgo(<span class="function"><span class="keyword">function</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $socket = <span class="keyword">new</span> Lib\Coroutine\Socket(AF_INET, SOCK_STREAM, IPPROTO_IP);</span><br><span class="line">    <span class="keyword">if</span>($socket-&gt;fd &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        var_dump(<span class="string">"err"</span>);<span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $socket-&gt;bind(<span class="string">"127.0.0.1"</span>, <span class="number">9999</span>);</span><br><span class="line">    $socket-&gt;listen();</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        $conn = $socket-&gt;accept();</span><br><span class="line">        cgo(<span class="function"><span class="keyword">function</span> <span class="params">()</span> <span class="title">use</span><span class="params">($conn)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $data = $conn-&gt;recv();</span><br><span class="line">            $responseStr = <span class="string">"HTTP/1.1 200 OK\r\n</span></span><br><span class="line"><span class="string">                        Content-Type: text/html\r\n</span></span><br><span class="line"><span class="string">                        Connection: close\r\n</span></span><br><span class="line"><span class="string">                        Content-Length: 11\r\n\r\n</span></span><br><span class="line"><span class="string">                        hello world\r\n"</span>;</span><br><span class="line">            $conn-&gt;send($responseStr);</span><br><span class="line">            $conn-&gt;close();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">lib_event_wait();</span><br></pre></td></tr></table></figure><h2 id="Constant"><a href="#Constant" class="headerlink" title="@Constant"></a>@Constant</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AF_INET, SOCK_STREAM, IPPROTO_IP</span><br></pre></td></tr></table></figure><h2 id="construct-初始化"><a href="#construct-初始化" class="headerlink" title="@__construct 初始化"></a>@__construct 初始化</h2><h2 id="bind-绑定端口"><a href="#bind-绑定端口" class="headerlink" title="@bind  绑定端口"></a>@bind  绑定端口</h2><h2 id="listen-启动监听"><a href="#listen-启动监听" class="headerlink" title="@listen 启动监听"></a>@listen 启动监听</h2><h2 id="accept-接收新连接"><a href="#accept-接收新连接" class="headerlink" title="@accept 接收新连接"></a>@accept 接收新连接</h2><h2 id="recv-读取缓冲区数据"><a href="#recv-读取缓冲区数据" class="headerlink" title="@recv   读取缓冲区数据"></a>@recv   读取缓冲区数据</h2><h2 id="send-向对端连接写入数据"><a href="#send-向对端连接写入数据" class="headerlink" title="@send   向对端连接写入数据"></a>@send   向对端连接写入数据</h2><h2 id="close-关闭连接"><a href="#close-关闭连接" class="headerlink" title="@close  关闭连接"></a>@close  关闭连接</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;创建协程版socket，封装所有协程api，所有阻塞操作都会触发协程切换&lt;/p&gt;
&lt;h2 id=&quot;Lib-Coroutine-Socket&quot;&gt;&lt;a href=&quot;#Lib-Coroutine-Socket&quot; class=&quot;headerlink&quot; title=&quot;@Lib\Cor
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="coroutine" scheme="http://wiki.brewlin.com/categories/c-ext/coroutine/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="coroutine" scheme="http://wiki.brewlin.com/tags/coroutine/"/>
    
      <category term="epoll" scheme="http://wiki.brewlin.com/tags/epoll/"/>
    
      <category term="socket" scheme="http://wiki.brewlin.com/tags/socket/"/>
    
      <category term="tcp" scheme="http://wiki.brewlin.com/tags/tcp/"/>
    
  </entry>
  
  <entry>
    <title>event</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/event/event/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/event/event/</id>
    <published>2020-01-12T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lib_event_init();</span><br><span class="line"></span><br><span class="line">dosthing...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lib_event_wait();</span><br></pre></td></tr></table></figure><h2 id="lib-event-init-初始化全局变量和申请内存空间"><a href="#lib-event-init-初始化全局变量和申请内存空间" class="headerlink" title="@lib_event_init() 初始化全局变量和申请内存空间"></a>@lib_event_init() 初始化全局变量和申请内存空间</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LibG;</span><br><span class="line">LibG.poll</span><br><span class="line">LibG.poll.epollfd;</span><br></pre></td></tr></table></figure><h2 id="lib-event-wait-轮训获取可读可写事件"><a href="#lib-event-wait-轮训获取可读可写事件" class="headerlink" title="@lib_event_wait() 轮训获取可读可写事件"></a>@lib_event_wait() 轮训获取可读可写事件</h2><p><code>timer、socket、server、sleep</code>等模块依赖于event，所以需要显示调用event<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while(LibG.running)&#123;</span><br><span class="line">    epoll_wait(....)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="event" scheme="http://wiki.brewlin.com/categories/c-ext/event/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="coroutine" scheme="http://wiki.brewlin.com/tags/coroutine/"/>
    
      <category term="epoll" scheme="http://wiki.brewlin.com/tags/epoll/"/>
    
  </entry>
  
  <entry>
    <title>tap</title>
    <link href="http://wiki.brewlin.com/wiki/net-protocol/6.%E7%89%A9%E7%90%86%E5%B1%82/tap/"/>
    <id>http://wiki.brewlin.com/wiki/net-protocol/6.物理层/tap/</id>
    <published>2020-01-10T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-创建一个tap模式的虚拟网卡tap0"><a href="#1-创建一个tap模式的虚拟网卡tap0" class="headerlink" title="1.创建一个tap模式的虚拟网卡tap0"></a>1.创建一个tap模式的虚拟网卡tap0</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip tuntap add mode tap tap0</span><br></pre></td></tr></table></figure><h3 id="2-开启该网卡"><a href="#2-开启该网卡" class="headerlink" title="2.开启该网卡"></a>2.开启该网卡</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip link set tap0 up</span><br></pre></td></tr></table></figure><h3 id="3-设置该网卡的ip及掩码-添加路由"><a href="#3-设置该网卡的ip及掩码-添加路由" class="headerlink" title="3.设置该网卡的ip及掩码 |添加路由"></a>3.设置该网卡的ip及掩码 |添加路由</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route add 192.168.1.0/24 dev tap0</span><br><span class="line">//增加ip地址</span><br><span class="line">sudo ip addr add 192.168.1.1/24 dev tap0</span><br></pre></td></tr></table></figure><h3 id="4-添加网关"><a href="#4-添加网关" class="headerlink" title="4.添加网关"></a>4.添加网关</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route add default via 192.168.1.2 dev tap0</span><br></pre></td></tr></table></figure><h2 id="删除网卡"><a href="#删除网卡" class="headerlink" title="@删除网卡"></a>@删除网卡</h2><h3 id="1-删除虚拟网卡"><a href="#1-删除虚拟网卡" class="headerlink" title="1.删除虚拟网卡"></a>1.删除虚拟网卡</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip tuntap del mode tap tap0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-创建一个tap模式的虚拟网卡tap0&quot;&gt;&lt;a href=&quot;#1-创建一个tap模式的虚拟网卡tap0&quot; class=&quot;headerlink&quot; title=&quot;1.创建一个tap模式的虚拟网卡tap0&quot;&gt;&lt;/a&gt;1.创建一个tap模式的虚拟网卡tap0&lt;/h3&gt;&lt;
      
    
    </summary>
    
      <category term="net-protocol" scheme="http://wiki.brewlin.com/categories/net-protocol/"/>
    
      <category term="6.物理层" scheme="http://wiki.brewlin.com/categories/net-protocol/6-%E7%89%A9%E7%90%86%E5%B1%82/"/>
    
    
      <category term="go" scheme="http://wiki.brewlin.com/tags/go/"/>
    
      <category term="protocol" scheme="http://wiki.brewlin.com/tags/protocol/"/>
    
      <category term="eth" scheme="http://wiki.brewlin.com/tags/eth/"/>
    
      <category term="tap" scheme="http://wiki.brewlin.com/tags/tap/"/>
    
      <category term="tool" scheme="http://wiki.brewlin.com/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>php_引用计数与gc</title>
    <link href="http://wiki.brewlin.com/wiki/blog/php_%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0%E4%B8%8EGC/"/>
    <id>http://wiki.brewlin.com/wiki/blog/php_引用计数与GC/</id>
    <published>2020-01-10T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<p>进行php扩展开发的时候会遇到一些问题，就是php用户态空间将变量传递到扩展层面<code>c层调用</code>的时候，会出现一些问题，下面的例子是一个timer定时器的例子。<br>用户空间会传递一个回调函数给<code>timer扩展接口</code>，那么实际回调函数被调用的地方是<code>c层</code>。但是该回调函数变量本身是由用户空间<code>申请</code>并交由php<code>内核gc管理</code>的，<br>如果扩展函数内不做任何操作，那么当切换到用户空间时php内核会判断该变量<code>需要回收</code>，然后扩展函数就会空指针异常等</p><p>当扩展函数内该php变量生命周期使用结束后，任然需要考虑<code>垃圾回收</code>的问题，并不是在扩展函数内简单<code>free(data)</code>就可以的，需要调用php内核引用计数接口等<br>进行变量的回收以及gc等，最后交由php内核gc管理。当然扩展函数内由c自行申请管理的内存可以自己释放</p><ul><li><p>扩展函数定义示例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PHP_METHOD(timer_obj,tick)</span><br><span class="line">&#123;</span><br><span class="line">    php_lib_timer_callback *fci = (php_lib_timer_callback *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(php_lib_timer_callback));</span><br><span class="line">    <span class="comment">//强制传入两个参数</span></span><br><span class="line">    ZEND_PARSE_PARAMETERS_START(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">    Z_PARAM_LONG(fci-&gt;seconds)</span><br><span class="line">    Z_PARAM_FUNC(fci-&gt;fci,fci-&gt;fcc)</span><br><span class="line">    ZEND_PARSE_PARAMETERS_END_EX(RETURN_FALSE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> id = create_time_event(fci-&gt;seconds,tick,fci,del);</span><br><span class="line">    zend_fci_cache_persist(&amp;fci-&gt;fcc);</span><br><span class="line">    RETURN_LONG(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>扩展函数内执行php用户态回调函数示例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">tick</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> id,<span class="keyword">void</span> *data)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    php_lib_timer_callback *fci = (php_lib_timer_callback *)data;</span><br><span class="line">    zval result;</span><br><span class="line">    fci-&gt;fci.retval = &amp;result;</span><br><span class="line">    <span class="keyword">if</span>(zend_call_function(&amp;fci-&gt;fci,&amp;fci-&gt;fcc) != SUCCESS)&#123;</span><br><span class="line">        <span class="keyword">return</span> NOMORE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fci-&gt;seconds;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="timer-中对回调函数变量进行引用计数-1"><a href="#timer-中对回调函数变量进行引用计数-1" class="headerlink" title="timer 中对回调函数变量进行引用计数+1"></a>timer 中对回调函数变量进行引用计数+1</h2><p>上面会发现timer::tick()函数在返回给用户空间时会做一个操作<code>zend_fci_cache_persist(&amp;fci-&gt;fcc);</code>，正是该调用<br>对传入的回调函数进行饮用计数管理，<code>告诉php内核该回调函数在c层会继续使用不用回收</code>。代码如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">zend_fci_cache_persist</span><span class="params">(zend_fcall_info_cache *fci_cache)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (fci_cache-&gt;object)</span><br><span class="line">    &#123;</span><br><span class="line">        GC_ADDREF(fci_cache-&gt;object);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (fci_cache-&gt;function_handler-&gt;op_array.fn_flags &amp; ZEND_ACC_CLOSURE)</span><br><span class="line">    &#123;</span><br><span class="line">        GC_ADDREF(ZEND_CLOSURE_OBJECT(fci_cache-&gt;function_handler));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中<code>GC_ADDREF（）</code>函数很明显就是内核GC相关的api。<code>fci_cache-&gt;function_handler</code> 则为用户传递的回调函数真正的变量地址</p><p>如上前奏后就可以在c扩展中放心的对用户传递的变量进行操作了</p><h2 id="timer-中结束后变量的Gc回收"><a href="#timer-中结束后变量的Gc回收" class="headerlink" title="timer 中结束后变量的Gc回收"></a>timer 中结束后变量的Gc回收</h2><p>上面有看到<code>php_lib_timer_callback</code>变量实际是自己定义的结构体，包括内存也是有开发者自己分配的，可以放心的<code>free</code>。但是该结构体中<br>指向的<code>fci.fcc</code> 则实际是php用户空间申请的变量，不能直接<code>free</code>,如果直接free，会引发php gc泄漏，如下警告所示:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; php timer.php</span><br><span class="line">/php/src/Zend/zend_closures.c(<span class="number">459</span>) :  Freeing <span class="number">0x00007fc084e6d480</span> (<span class="number">304</span> bytes), script=/timer.php</span><br><span class="line">=== Total <span class="number">1</span> memory leaks detected ===</span><br></pre></td></tr></table></figure></p><p>所以依然需要根据php内核GC的管理方式来处理用户空间的变量，也就是模拟用户空间那样对变量的管理：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">zend_fci_cache_discard</span><span class="params">(zend_fcall_info_cache *fci_cache)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (fci_cache-&gt;object) &#123;</span><br><span class="line">        OBJ_RELEASE(fci_cache-&gt;object);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (fci_cache-&gt;function_handler-&gt;op_array.fn_flags &amp; ZEND_ACC_CLOSURE) &#123;</span><br><span class="line">        OBJ_RELEASE(ZEND_CLOSURE_OBJECT(fci_cache-&gt;function_handler));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">zend_fci_params_discard</span><span class="params">(zend_fcall_info *fci)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (fci-&gt;param_count &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">uint32_t</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; fci-&gt;param_count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            zval_ptr_dtor(&amp;fci-&gt;params[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        efree(fci-&gt;params);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在不需要使用的时候，也需要对回调函数本身进行减引用，以及回调函数内的用户态的参数进行减引用以及变量的回收。只有做完上面这些基本的管理才能<br>开发一个安全的扩展函数</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总之用户空间申请的变量传递给扩展内函数使用，如果在返回给用户空间后依然会继续使用就要zval_copy或者引用计数+1,因为在返回给用户空间的时候本身用户空间gc会判断该变量是否有继续引用，否则就<code>refcount -= 1</code>，用户空间回收该变量，但是扩展函数内依然在访问该已经被销毁的变量。就会导致错误</p><p>只有将这些变量的引用与回收做好了才能开发出安全可靠的扩展函数</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;进行php扩展开发的时候会遇到一些问题，就是php用户态空间将变量传递到扩展层面&lt;code&gt;c层调用&lt;/code&gt;的时候，会出现一些问题，下面的例子是一个timer定时器的例子。&lt;br&gt;用户空间会传递一个回调函数给&lt;code&gt;timer扩展接口&lt;/code&gt;，那么实际回调函
      
    
    </summary>
    
      <category term="blog" scheme="http://wiki.brewlin.com/categories/blog/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="refrerence" scheme="http://wiki.brewlin.com/tags/refrerence/"/>
    
      <category term="gc" scheme="http://wiki.brewlin.com/tags/gc/"/>
    
  </entry>
  
  <entry>
    <title>定时器</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/timer/%E5%AE%9A%E6%97%B6%E5%99%A8/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/timer/定时器/</id>
    <published>2020-01-10T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">lib_event_init();</span><br><span class="line"></span><br><span class="line"><span class="comment">//定时器 毫秒单位 循环触发</span></span><br><span class="line">$timerid = Lib\Timer::tick(<span class="number">1000</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"定时器循环"</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定时器 毫秒单位 触发单次</span></span><br><span class="line">Lib\Timer::after(<span class="number">1000</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span><span class="title">use</span><span class="params">($timerid)</span></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"只执行一次"</span>;</span><br><span class="line">    <span class="comment">//定时器 毫秒单位 触发单次</span></span><br><span class="line">    Lib\Timer::after(<span class="number">2000</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span><span class="title">use</span><span class="params">($timerid)</span></span>&#123;</span><br><span class="line">        <span class="comment">//定时器删除</span></span><br><span class="line">        Lib\Timer::del($timerid);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lib_event_wait();</span><br></pre></td></tr></table></figure><h2 id="tick-无限触发定时任务"><a href="#tick-无限触发定时任务" class="headerlink" title="@tick 无限触发定时任务"></a>@tick 无限触发定时任务</h2><p><code>long Lib\Timer::tick(long long seconds,$callback);</code><br>单位为毫秒</p><p>底层基于epoll_wait 阻塞触发定时</p><h2 id="after-单次任务执行"><a href="#after-单次任务执行" class="headerlink" title="@after 单次任务执行"></a>@after 单次任务执行</h2><p><code>long  Lib\Timer::after(long long seconds,$callback);</code></p><h2 id="del-删除定时任务"><a href="#del-删除定时任务" class="headerlink" title="@del 删除定时任务"></a>@del 删除定时任务</h2><p><code>long Lib\Timer::del(long timerid);</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;demo&quot;&gt;&lt;a href=&quot;#demo&quot; class=&quot;headerlink&quot; title=&quot;demo&quot;&gt;&lt;/a&gt;demo&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="timer" scheme="http://wiki.brewlin.com/categories/c-ext/timer/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="epoll" scheme="http://wiki.brewlin.com/tags/epoll/"/>
    
      <category term="timer" scheme="http://wiki.brewlin.com/tags/timer/"/>
    
  </entry>
  
  <entry>
    <title>协程tcp服务</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/coroutine/%E5%8D%8F%E7%A8%8Btcp%E6%9C%8D%E5%8A%A1/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/coroutine/协程tcp服务/</id>
    <published>2020-01-05T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<p>创建协程版server，封装所有协程api，所有阻塞操作都会触发协程切换</p><h2 id="Lib-Coroutine-Server"><a href="#Lib-Coroutine-Server" class="headerlink" title="@Lib\Coroutine\Server"></a>@Lib\Coroutine\Server</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化全局对象 epoll等内存空间初始化</span></span><br><span class="line">lib_event_init();</span><br><span class="line"></span><br><span class="line"><span class="comment">//协程运行</span></span><br><span class="line">cgo(<span class="function"><span class="keyword">function</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        $server = <span class="keyword">new</span> Lib\Coroutine\Server(<span class="string">"127.0.0.1"</span>, <span class="number">9991</span>);</span><br><span class="line">        $server-&gt;set_handler(<span class="function"><span class="keyword">function</span> <span class="params">(Lib\Coroutine\Socket $conn)</span> <span class="title">use</span><span class="params">($server)</span> </span>&#123;</span><br><span class="line">                $data = $conn-&gt;recv();</span><br><span class="line">                $responseStr = <span class="string">"HTTP/1.1 200 OK\r\n</span></span><br><span class="line"><span class="string">                                Content-Type: text/html\r\n</span></span><br><span class="line"><span class="string">                                Connection: close\r\n</span></span><br><span class="line"><span class="string">                                Content-Length: 11\r\n\r\n</span></span><br><span class="line"><span class="string">                                hello world\r\n"</span>;</span><br><span class="line">                $conn-&gt;send($responseStr);</span><br><span class="line">                $conn-&gt;close();</span><br><span class="line">                <span class="comment">// Sco::sleep(0.01);</span></span><br><span class="line">        &#125;);</span><br><span class="line">        $server-&gt;start();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//epoll event 轮循 检查事件</span></span><br><span class="line">lib_event_wait();</span><br></pre></td></tr></table></figure><h2 id="construct-初始化"><a href="#construct-初始化" class="headerlink" title="@__construct 初始化"></a>@__construct 初始化</h2><h2 id="set-handler-callback-回调触发事件"><a href="#set-handler-callback-回调触发事件" class="headerlink" title="@set_handler($callback)  回调触发事件"></a>@set_handler($callback)  回调触发事件</h2><h2 id="start-启动监听"><a href="#start-启动监听" class="headerlink" title="start() 启动监听"></a>start() 启动监听</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;创建协程版server，封装所有协程api，所有阻塞操作都会触发协程切换&lt;/p&gt;
&lt;h2 id=&quot;Lib-Coroutine-Server&quot;&gt;&lt;a href=&quot;#Lib-Coroutine-Server&quot; class=&quot;headerlink&quot; title=&quot;@Lib\Cor
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="coroutine" scheme="http://wiki.brewlin.com/categories/c-ext/coroutine/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="coroutine" scheme="http://wiki.brewlin.com/tags/coroutine/"/>
    
      <category term="epoll" scheme="http://wiki.brewlin.com/tags/epoll/"/>
    
      <category term="socket" scheme="http://wiki.brewlin.com/tags/socket/"/>
    
      <category term="tcp" scheme="http://wiki.brewlin.com/tags/tcp/"/>
    
  </entry>
  
  <entry>
    <title>协程</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/coroutine/%E5%8D%8F%E7%A8%8B/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/coroutine/协程/</id>
    <published>2020-01-05T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<p>将协程任务保存到扩展事件中进行调度</p><h2 id="cgo"><a href="#cgo" class="headerlink" title="@cgo"></a>@cgo</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化全局对象 epoll等内存空间初始化</span></span><br><span class="line">lib_event_init();</span><br><span class="line"></span><br><span class="line"><span class="comment">//协程运行</span></span><br><span class="line">cgo(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"go"</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//epoll event 轮循 检查事件</span></span><br><span class="line">lib_event_wait();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;将协程任务保存到扩展事件中进行调度&lt;/p&gt;
&lt;h2 id=&quot;cgo&quot;&gt;&lt;a href=&quot;#cgo&quot; class=&quot;headerlink&quot; title=&quot;@cgo&quot;&gt;&lt;/a&gt;@cgo&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="coroutine" scheme="http://wiki.brewlin.com/categories/c-ext/coroutine/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="coroutine" scheme="http://wiki.brewlin.com/tags/coroutine/"/>
    
      <category term="epoll" scheme="http://wiki.brewlin.com/tags/epoll/"/>
    
  </entry>
  
  <entry>
    <title>进程管理</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/process/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/process/进程管理/</id>
    <published>2019-12-20T13:28:59.000Z</published>
    <updated>2020-02-03T12:39:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Lib-Process"><a href="#Lib-Process" class="headerlink" title="@Lib/Process"></a>@<code>Lib/Process</code></h2><p>该扩展初始化传入回调函数并创建子进程执行，子进程间可以通过channel通讯<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$process = <span class="keyword">new</span> Lib\Process(<span class="function"><span class="keyword">function</span><span class="params">(Lib\Process $process)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">        $data = $process-&gt;read();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"child process :&gt; get parent msg: $data \n\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$process-&gt;start();</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>;$i &lt; <span class="number">10</span> ; $i ++ )&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"parent process :&gt; send child msg: $i\n"</span>;</span><br><span class="line">    $process-&gt;write($i);</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="construct"><a href="#construct" class="headerlink" title="@construct()"></a>@<code>construct()</code></h2><p>初始化构造函数时必须传入回调函数，在子进程创建时会调用</p><h2 id="start"><a href="#start" class="headerlink" title="@start()"></a>@<code>start()</code></h2><p>执行创建子进程操作</p><h2 id="process-gt-write-data"><a href="#process-gt-write-data" class="headerlink" title="@$process-&gt;write($data)"></a>@<code>$process-&gt;write($data)</code></h2><p>向子进程或者父进程写入数据</p><h2 id="process-gt-read"><a href="#process-gt-read" class="headerlink" title="@$process-&gt;read()"></a>@<code>$process-&gt;read()</code></h2><p>向子进程或父进程读取数据</p><h2 id="process-gt-getpid"><a href="#process-gt-getpid" class="headerlink" title="@$process-&gt;getpid()"></a>@<code>$process-&gt;getpid()</code></h2><p>获取当前进程id</p><h2 id="process-gt-getppid"><a href="#process-gt-getppid" class="headerlink" title="@$process-&gt;getppid()"></a>@<code>$process-&gt;getppid()</code></h2><p>获取父进程id</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Lib-Process&quot;&gt;&lt;a href=&quot;#Lib-Process&quot; class=&quot;headerlink&quot; title=&quot;@Lib/Process&quot;&gt;&lt;/a&gt;@&lt;code&gt;Lib/Process&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;该扩展初始化传入回调函数并创建子进程执
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="process" scheme="http://wiki.brewlin.com/categories/c-ext/process/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="syscall" scheme="http://wiki.brewlin.com/tags/syscall/"/>
    
      <category term="process" scheme="http://wiki.brewlin.com/tags/process/"/>
    
      <category term="channel" scheme="http://wiki.brewlin.com/tags/channel/"/>
    
  </entry>
  
</feed>
