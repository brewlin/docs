<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Brewlin&#39;s Wiki</title>
  
  <subtitle>found everthing</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wiki.brewlin.com/"/>
  <updated>2020-03-31T06:31:01.651Z</updated>
  <id>http://wiki.brewlin.com/</id>
  
  <author>
    <name>brewlin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>线程池</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/thread/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/thread/线程池/</id>
    <published>2020-03-31T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$pool = <span class="keyword">new</span> Lib\Thread\Pool(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">$ref = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//future = Lib\Thread\Pool\Future</span></span><br><span class="line"><span class="comment">//future-&gt;wait() 可以阻塞返回结果</span></span><br><span class="line">$future = $pool-&gt;add(<span class="function"><span class="keyword">function</span><span class="params">()</span><span class="title">use</span><span class="params">(&amp;$ref)</span></span>&#123;</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    var_dump($ref);</span><br><span class="line">&#125;);</span><br><span class="line">$future-&gt;wait();</span><br><span class="line">;</span><br></pre></td></tr></table></figure><h2 id="construct-创建线程数量"><a href="#construct-创建线程数量" class="headerlink" title="@construct 创建线程数量"></a>@construct 创建线程数量</h2><p>构造函数需要传入线程创建的参数，在初始化就默认创建固定的线程数量</p><h2 id="add-投递执行任务"><a href="#add-投递执行任务" class="headerlink" title="@add 投递执行任务"></a>@add 投递执行任务</h2><p><code>add()</code> 函数接受一个php闭包函数，可通过引用的方式附加传入参数</p><p>投递后如果线程空闲，立即执行该任务</p><h2 id="Lib-Thread-Pool-Future"><a href="#Lib-Thread-Pool-Future" class="headerlink" title="@Lib\Thread\Pool\Future"></a>@<code>Lib\Thread\Pool\Future</code></h2><p>投递任务后立即返回一个future包装器，可用于阻塞等待任务结束，转换为同步阻塞程序</p><p>// TODO : 该包装器可以阻塞等待并获取任务返回的结果,现在只能通过传递引用方式获取值<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$future = $pool-&gt;add(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;&#125;);</span><br></pre></td></tr></table></figure></p><h3 id="furture-gt-wait-等待该异步任务处理结束"><a href="#furture-gt-wait-等待该异步任务处理结束" class="headerlink" title="@furture-&gt;wait() 等待该异步任务处理结束"></a>@<code>furture-&gt;wait()</code> 等待该异步任务处理结束</h3><p>该函数用于等待，当前线程执行的任务结束<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$future-&gt;wait();</span><br></pre></td></tr></table></figure></p><h3 id="异步任务demo"><a href="#异步任务demo" class="headerlink" title="@异步任务demo"></a>@异步任务demo</h3><p>将100个任务全部投递到线程排队处理，然后当前继续执行其他任务<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>;$i &lt; <span class="number">100</span> ;$i ++)&#123;</span><br><span class="line">    $pool-&gt;add(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        sleep(<span class="number">1</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里继续执行其他任务</span></span><br></pre></td></tr></table></figure></p><h3 id="同步任务demo"><a href="#同步任务demo" class="headerlink" title="@同步任务demo"></a>@同步任务demo</h3><p>将100个任务投递到线程处理，并逐一等待每一任务执行完毕<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>;$i &lt; <span class="number">100</span> ;$i ++)&#123;</span><br><span class="line">    $future = $pool-&gt;add(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        sleep(<span class="number">1</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $future-&gt;wait();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里继续阻塞，直到上面100s过期后任务处理完毕</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;demo&quot;&gt;&lt;a href=&quot;#demo&quot; class=&quot;headerlink&quot; title=&quot;demo&quot;&gt;&lt;/a&gt;demo&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="thread" scheme="http://wiki.brewlin.com/categories/c-ext/thread/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="thread" scheme="http://wiki.brewlin.com/tags/thread/"/>
    
      <category term="pool" scheme="http://wiki.brewlin.com/tags/pool/"/>
    
  </entry>
  
  <entry>
    <title>dns协议实现</title>
    <link href="http://wiki.brewlin.com/wiki/net-protocol/2.%E5%BA%94%E7%94%A8%E5%B1%82/dns/2.dns%E5%8D%8F%E8%AE%AE%E5%AE%9E%E7%8E%B0/"/>
    <id>http://wiki.brewlin.com/wiki/net-protocol/2.应用层/dns/2.dns协议实现/</id>
    <published>2020-03-06T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="封装发送包体"><a href="#封装发送包体" class="headerlink" title="@封装发送包体"></a>@封装发送包体</h2><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//protocol/appliction/dns/endpoint.go</span></span><br><span class="line"></span><br><span class="line">h := header.DNS(<span class="built_in">make</span>([]<span class="keyword">byte</span>,<span class="number">12</span>))</span><br><span class="line">h.Setheader(e.ID)</span><br><span class="line">h.SetCount(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">h.SetQuestion(e.Domain,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>首先创建一个Dns的字节数组，默认给12字节大小，因为header头固定为12字节大小</p><h3 id="header头封装"><a href="#header头封装" class="headerlink" title="@header头封装"></a>@header头封装</h3><p>主要是初始化ID  和  一些flag标志位<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">h.SetHeader(e.ID)</span><br><span class="line"></span><br><span class="line"><span class="comment">//Setheader</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d DNS)</span> <span class="title">Setheader</span><span class="params">(id <span class="keyword">uint16</span>)</span></span>&#123;</span><br><span class="line">d.setID(id)</span><br><span class="line">d.setFlag(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//setID 将前两个字节 初始化id</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d DNS)</span><span class="title">setID</span><span class="params">(id <span class="keyword">uint16</span>)</span></span>&#123;</span><br><span class="line"><span class="comment">//set id</span></span><br><span class="line">binary.BigEndian.PutUint16(d[ID:], id)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>设置标志位,都给默认值<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//SetFlag</span></span><br><span class="line"><span class="comment">//QR 表示请求还是响应</span></span><br><span class="line"><span class="comment">//OPCODE 1表示反转查询；2表示服务器状态查询。3~15目前保留，以备将来使用</span></span><br><span class="line"><span class="comment">//AA 表示响应的服务器是否是权威DNS服务器。只在响应消息中有效。</span></span><br><span class="line"><span class="comment">//TC 指示消息是否因为传输大小限制而被截断</span></span><br><span class="line"><span class="comment">//RD 该值在请求消息中被设置，响应消息复用该值。如果被设置，表示希望服务器递归查询。但服务器不一定支持递归查询</span></span><br><span class="line"><span class="comment">//RA 。该值在响应消息中被设置或被清除，以表明服务器是否支持递归查询。</span></span><br><span class="line"><span class="comment">//Z 保留备用</span></span><br><span class="line"><span class="comment">//RCODE: 该值在响应消息中被设置。取值及含义如下：</span></span><br><span class="line"><span class="comment">//0：No error condition，没有错误条件；</span></span><br><span class="line"><span class="comment">//1：Format error，请求格式有误，服务器无法解析请求；</span></span><br><span class="line"><span class="comment">//2：Server failure，服务器出错。</span></span><br><span class="line"><span class="comment">//3：Name Error，只在权威DNS服务器的响应中有意义，表示请求中的域名不存在。</span></span><br><span class="line"><span class="comment">//4：Not Implemented，服务器不支持该请求类型。</span></span><br><span class="line"><span class="comment">//5：Refused，服务器拒绝执行请求操作。</span></span><br><span class="line"><span class="comment">//6~15：保留备用</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d DNS)</span> <span class="title">setFlag</span><span class="params">(QR <span class="keyword">uint16</span>, OPCODE <span class="keyword">uint16</span>, AA <span class="keyword">uint16</span>, TC <span class="keyword">uint16</span>, RD <span class="keyword">uint16</span>, RA <span class="keyword">uint16</span>, RCODE <span class="keyword">uint16</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">//set flag</span></span><br><span class="line">op :=  QR&lt;&lt;<span class="number">15</span> + OPCODE&lt;&lt;<span class="number">11</span> + AA&lt;&lt;<span class="number">10</span> + TC&lt;&lt;<span class="number">9</span> + RD&lt;&lt;<span class="number">8</span> + RA&lt;&lt;<span class="number">7</span> + RCODE</span><br><span class="line">binary.BigEndian.PutUint16(d[OP:],op)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>到这里包头header4字节就算封装好了</p><h3 id="Count-封装"><a href="#Count-封装" class="headerlink" title="@Count 封装"></a>@Count 封装</h3><p>因为是查询包体，只需要设置query count即可，<code>现在只支持单条查询</code>，所以默认给1<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//SetCount</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d DNS)</span> <span class="title">SetCount</span><span class="params">(qd,an,ns,qa <span class="keyword">uint16</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">//SetQdcount</span></span><br><span class="line">binary.BigEndian.PutUint16(d[QDCOUNT:], qd)</span><br><span class="line"><span class="comment">//SetAncount</span></span><br><span class="line">binary.BigEndian.PutUint16(d[ANCOUNT:] ,an)</span><br><span class="line"><span class="comment">//SetNscount</span></span><br><span class="line">binary.BigEndian.PutUint16(d[NSCOUNT:],ns)</span><br><span class="line"><span class="comment">//SetQAcount</span></span><br><span class="line">binary.BigEndian.PutUint16(d[ARCOUNT:],qa)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里每个标志位占2字节，总共8字节，加上上面的header4字节 总共12字节</p><h3 id="Question-封装"><a href="#Question-封装" class="headerlink" title="@Question 封装"></a>@Question 封装</h3><p>这里主要是将需要查询的域名写入包体中，这里有个地方需要计算:<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DNS)</span><span class="title">SetQuestion</span><span class="params">(domain <span class="keyword">string</span>,qtype,qclass <span class="keyword">uint16</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> _,b := <span class="keyword">range</span> d.getDomain(domain) &#123;</span><br><span class="line">*d = <span class="built_in">append</span>((*d),b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//d.setDomain(domain)</span></span><br><span class="line">q := DNSQuestion&#123;</span><br><span class="line">QuestionType:  qtype,</span><br><span class="line">QuestionClass: qclass,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> buffer bytes.Buffer</span><br><span class="line">binary.Write(&amp;buffer,binary.BigEndian,*d)</span><br><span class="line">binary.Write(&amp;buffer,binary.BigEndian,q)</span><br><span class="line">*d = buffer.Bytes()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DNS)</span><span class="title">getDomain</span><span class="params">(domain <span class="keyword">string</span>)</span> []<span class="title">byte</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">buffer   bytes.Buffer</span><br><span class="line">segments []<span class="keyword">string</span> = strings.Split(domain, <span class="string">"."</span>)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> _, seg := <span class="keyword">range</span> segments &#123;</span><br><span class="line">binary.Write(&amp;buffer, binary.BigEndian, <span class="keyword">byte</span>(<span class="built_in">len</span>(seg)))</span><br><span class="line">binary.Write(&amp;buffer, binary.BigEndian, []<span class="keyword">byte</span>(seg))</span><br><span class="line">&#125;</span><br><span class="line">binary.Write(&amp;buffer, binary.BigEndian, <span class="keyword">byte</span>(<span class="number">0x00</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> buffer.Bytes()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>首先计算待查询的域名动态字节并返回</li><li>最后在封装<code>DNSQuestion</code>4字节追加到末尾</li><li>这里基本完成了所有的请求包的构建</li></ul><h3 id="发送数据包"><a href="#发送数据包" class="headerlink" title="@发送数据包"></a>@发送数据包</h3><p>dns是基于dns协议查询，直接将上面进行udp发送即可<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sendQuery udp query dns</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *Endpoint)</span> <span class="title">sendQuery</span> <span class="params">()</span> <span class="params">( *[]header.DNSResource ,error )</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := e.c.Connect();err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>,err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := e.c.Write(*e.req) ; err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>,err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> e.parseResp()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="解析响应包体"><a href="#解析响应包体" class="headerlink" title="@解析响应包体"></a>@解析响应包体</h2><p>主要就是接收udp响应数据，注意：==<code>udp当前实现是 如果对端不可访问。在read时才会接收到icmp错误控制消息</code>==<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//parseResp</span></span><br><span class="line"><span class="comment">//解析响应</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *Endpoint)</span> <span class="title">parseResp</span><span class="params">()</span> <span class="params">(*[]header.DNSResource,error)</span></span>&#123;</span><br><span class="line">rsp,err := e.c.Read()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>,err</span><br><span class="line">&#125;</span><br><span class="line">p := header.DNS(rsp)</span><br><span class="line">e.resp = &amp;p</span><br><span class="line">e.answer = p.GetAnswer(e.Domain)</span><br><span class="line"><span class="keyword">return</span> e.parseAnswer()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="获取Answer包体"><a href="#获取Answer包体" class="headerlink" title="@获取Answer包体"></a>@获取Answer包体</h3><p>主要是计算三个<code>count</code>计数总和，判断总共有多少条响应记录</p><p>剩下的是挨着字节数遍历读取即可<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//GetAnswer</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d DNS)</span> <span class="title">GetAnswer</span><span class="params">(domain <span class="keyword">string</span>)</span> *[]<span class="title">DNSResource</span></span> &#123;</span><br><span class="line"><span class="comment">//answer 起始地址</span></span><br><span class="line">asLen := DOMAIN + <span class="built_in">len</span>(d.getDomain(domain)) + <span class="number">4</span></span><br><span class="line"></span><br><span class="line">answer := []DNSResource&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; (<span class="keyword">int</span>(d.GetANCount() + d.GetNSCount() + d.GetARCount())) ;i ++ &#123;</span><br><span class="line">rs := DNSResource&#123;&#125;</span><br><span class="line"><span class="comment">//判断是不是指针 pointer地址</span></span><br><span class="line"><span class="keyword">if</span> checkP := d[asLen]; checkP &gt;&gt; <span class="number">6</span>  == <span class="number">3</span> &#123;</span><br><span class="line"><span class="comment">//pointer := (d[asLen] &amp; 0x3F &lt;&lt; 8) + d[asLen+1]</span></span><br><span class="line">rs.Name = binary.BigEndian.Uint16(d[asLen:asLen+<span class="number">2</span>])</span><br><span class="line">asLen += <span class="number">2</span></span><br><span class="line">rs.Type = DNSResourceType(binary.BigEndian.Uint16(d[asLen:asLen+<span class="number">2</span>]))</span><br><span class="line">asLen += <span class="number">2</span></span><br><span class="line">rs.Class = binary.BigEndian.Uint16(d[asLen:asLen+<span class="number">2</span>])</span><br><span class="line">asLen += <span class="number">2</span></span><br><span class="line">rs.TTL = binary.BigEndian.Uint32(d[asLen:asLen+<span class="number">4</span>])</span><br><span class="line">asLen += <span class="number">4</span></span><br><span class="line">rs.RDlen = binary.BigEndian.Uint16(d[asLen:asLen+<span class="number">2</span>])</span><br><span class="line">asLen += <span class="number">2</span></span><br><span class="line">rs.RData = d[asLen:asLen+<span class="keyword">int</span>(rs.RDlen)]</span><br><span class="line">asLen += <span class="keyword">int</span>(rs.RDlen)</span><br><span class="line">answer = <span class="built_in">append</span>(answer,rs)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> &amp;answer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="解析Answer-address"><a href="#解析Answer-address" class="headerlink" title="@解析Answer address"></a>@解析Answer address</h3><p>这里主要解析A类型  和Cname类型，基本满足场景了<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *Endpoint)</span> <span class="title">parseAnswer</span><span class="params">()</span><span class="params">(*[]header.DNSResource,error)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(*e.answer) ; i++ &#123;</span><br><span class="line"><span class="keyword">switch</span> (*e.answer)[i].Type &#123;</span><br><span class="line"><span class="keyword">case</span> header.A:</span><br><span class="line">(*e.answer)[i].Address = e.parseAName((*e.answer)[i].RData)</span><br><span class="line"><span class="keyword">case</span> header.CNAME:</span><br><span class="line">(*e.answer)[i].Address = e.parseCName((*e.answer)[i].RData)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> e.answer,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;封装发送包体&quot;&gt;&lt;a href=&quot;#封装发送包体&quot; class=&quot;headerlink&quot; title=&quot;@封装发送包体&quot;&gt;&lt;/a&gt;@封装发送包体&lt;/h2&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
      <category term="net-protocol" scheme="http://wiki.brewlin.com/categories/net-protocol/"/>
    
      <category term="2.应用层" scheme="http://wiki.brewlin.com/categories/net-protocol/2-%E5%BA%94%E7%94%A8%E5%B1%82/"/>
    
      <category term="dns" scheme="http://wiki.brewlin.com/categories/net-protocol/2-%E5%BA%94%E7%94%A8%E5%B1%82/dns/"/>
    
    
      <category term="go" scheme="http://wiki.brewlin.com/tags/go/"/>
    
      <category term="protocol" scheme="http://wiki.brewlin.com/tags/protocol/"/>
    
      <category term="client" scheme="http://wiki.brewlin.com/tags/client/"/>
    
      <category term="dns" scheme="http://wiki.brewlin.com/tags/dns/"/>
    
  </entry>
  
  <entry>
    <title>dns协议简介</title>
    <link href="http://wiki.brewlin.com/wiki/net-protocol/2.%E5%BA%94%E7%94%A8%E5%B1%82/dns/1.dns%E5%8D%8F%E8%AE%AE%E7%AE%80%E4%BB%8B/"/>
    <id>http://wiki.brewlin.com/wiki/net-protocol/2.应用层/dns/1.dns协议简介/</id>
    <published>2020-03-06T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="整体包结构-header-body"><a href="#整体包结构-header-body" class="headerlink" title="@整体包结构 header+body"></a>@整体包结构 header+body</h2><p>DNS请求与响应的格式是一致的，其整体分为Header、Question、Answer、Authority、Additional5部分，如下图所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+-+-+-+-+-------+-+-------------+</span><br><span class="line">|            Header             | </span><br><span class="line">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span><br><span class="line">|            Question           | the question for the name server</span><br><span class="line">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span><br><span class="line">|            Answer             | RRs answering the question</span><br><span class="line">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span><br><span class="line">|            Authority          | RRs pointing toward an authority</span><br><span class="line">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  </span><br><span class="line">|            Additional         |  RRs holding additional information</span><br><span class="line">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span><br></pre></td></tr></table></figure></p><h2 id="Header-包结构"><a href="#Header-包结构" class="headerlink" title="@Header 包结构"></a>@Header 包结构</h2><p>Header部分是一定有的，长度固定为12个字节；其余4部分可能有也可能没有，并且长度也不一定，这个在Header部分中有指明。Header的结构如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16</span><br><span class="line">+-+-+-+-+-------+-+-------------+-----------------------</span><br><span class="line">|                     ID                               |</span><br><span class="line">+-------------------------------------------------------  </span><br><span class="line">|QR|  OPCODE   |AA|TC|RD|RA|    RSV    |      RCODE    |</span><br><span class="line">+-------------------------------------------------------   </span><br><span class="line">|                 QUESTION COUNT                       |</span><br><span class="line">+------------------------------------------------------- </span><br><span class="line">|                 ANSWER   COUNT                       |</span><br><span class="line">+-------------------------------------------------------   </span><br><span class="line">|                 AUTHORITY SCOUNT                     |</span><br><span class="line">+-------------------------------------------------------   </span><br><span class="line">|                 ADITION COUNT                        |</span><br><span class="line">+-------------------------------------------------------</span><br></pre></td></tr></table></figure></p><p>下面说明一下各个字段的含义:</p><ul><li><code>ID</code>：占16位。该值由发出DNS请求的程序生成，DNS服务器在响应时会使用该ID，这样便于请求程序区分不同的DNS响应。</li><li><code>QR</code>：占1位。指示该消息是请求还是响应。0表示请求；1表示响应。</li><li><code>OPCODE</code>：占4位。指示请求的类型，有请求发起者设定，响应消息中复用该值。0表示标准查询；1表示反转查询；2表示服务器状态查询。3~15目前保留，以备将来使用。</li><li><code>AA</code>（Authoritative Answer，权威应答）：占1位。表示响应的服务器是否是权威DNS服务器。只在响应消息中有效。</li><li><code>TC</code>（TrunCation，截断）：占1位。指示消息是否因为传输大小限制而被截断。</li><li><code>RD</code>（Recursion Desired，期望递归）：占1位。该值在请求消息中被设置，响应消息复用该值。如果被设置，表示希望服务器递归查询。但服务器不一定支持递归查询。</li><li><code>RA</code>（Recursion Available，递归可用性）：占1位。该值在响应消息中被设置或被清除，以表明服务器是否支持递归查询。</li><li>Z：占3位。保留备用。</li><li><code>RCODE</code>（Response code）：占4位。该值在响应消息中被设置。取值及含义如下：<ul><li>0：No error condition，没有错误条件；</li><li>1：Format error，请求格式有误，服务器无法解析请求；</li><li>2：Server failure，服务器出错。</li><li>3：Name Error，只在权威DNS服务器的响应中有意义，表示请求中的域名不存在。</li><li>4：Not Implemented，服务器不支持该请求类型。</li><li>5：Refused，服务器拒绝执行请求操作。</li><li>6~15：保留备用。</li></ul></li><li><code>QUESTION COUNT</code>：占16位（无符号）。指明Question部分的包含的实体数量。</li><li><code>ANSWER COUNT</code>：占16位（无符号）。指明Answer部分的包含的RR（Resource Record）数量。</li><li><code>AUTHORITY COUNT</code>：占16位（无符号）。指明Authority部分的包含的RR（Resource Record）数量。</li><li><code>ADDITIONAL COUNT</code>：占16位（无符号）。指明Additional部分的包含的RR（Resource Record）数量。</li></ul><h2 id="Question-包结构"><a href="#Question-包结构" class="headerlink" title="@Question 包结构"></a>@Question 包结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16</span><br><span class="line">+-+-+-+-+-------+-+-------------+-----------------------</span><br><span class="line">/      QUESTION NAME 字节数不固定 存储host name         /</span><br><span class="line">/                                                       /</span><br><span class="line">+-------------------------------------------------------   </span><br><span class="line">|                 Question type                        |</span><br><span class="line">+------------------------------------------------------- </span><br><span class="line">|                 question class                       |</span><br><span class="line">+-------------------------------------------------------</span><br></pre></td></tr></table></figure><ul><li><code>QNAME</code>：字节数不定，以0x00作为结束符。表示查询的主机名。注意：众所周知，主机名被”.”号分割成了多段标签。在QNAME中，每段标签前面加一个数字，表示接下来标签的长度。比如：<a href="http://www.baidu.com">www.baidu.com</a> 表示成QNAME时，会在”www”前面加上一个字节0x03，”baidu”前面加上一个字节0x04，”com”前面加上一个字节0x03,最后在加0x00表示结尾</li><li><code>QTYPE</code>：占2个字节。表示RR类型，见以上RR介绍；</li><li><code>QCLASS</code>：占2个字节。表示RR分类，见以上RR介绍。</li></ul><h2 id="Answer、Authority、Additional-包结构"><a href="#Answer、Authority、Additional-包结构" class="headerlink" title="@ Answer、Authority、Additional 包结构"></a>@ Answer、Authority、Additional 包结构</h2><p>三个包结构都是一致的，而且字节数都是动态的如下图:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16</span><br><span class="line">+-+-+-+-+-------+-+-------------+-----------------------</span><br><span class="line">/                 Name                                  /</span><br><span class="line">/                                                       /</span><br><span class="line">+-------------------------------------------------------   </span><br><span class="line">|                 type                                  |</span><br><span class="line">+------------------------------------------------------- </span><br><span class="line">|                 class                                 |</span><br><span class="line">+------------------------------------------------------- </span><br><span class="line">|                 TTl                                   |</span><br><span class="line">|                                                       |</span><br><span class="line">+------------------------------------------------------- </span><br><span class="line">|                 len                                   |</span><br><span class="line">+-------------------------------------------------------</span><br><span class="line">/                 data                                  /</span><br><span class="line">/                                                       /</span><br><span class="line">+-------------------------------------------------------</span><br></pre></td></tr></table></figure></p><ul><li>NAME：长度不定，可能是真正的数据，也有可能是指针（其值表示的是真正的数据在整个数据中的字节索引数），还有可能是二者的混合（以指针结尾）。若是真正的数据，会以0x00结尾；若是指针，指针占2个字节，第一个字节的高2位为11。算法方式详见具体的go实现</li><li>TYPE：占2个字节。表示RR的类型，如A、CNAME、NS等，见以上RR介绍；</li><li>CLASS：占2个字节。表示RR的分类，见以上RR介绍；</li><li>TTL：占4个字节。表示RR生命周期，即RR缓存时长，单位是秒；</li><li>RDLENGTH：占2个字节。指定RDATA字段的字节数；</li><li>RDATA：即之前介绍的value，含义与TYPE有关，见以上RR介绍。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;整体包结构-header-body&quot;&gt;&lt;a href=&quot;#整体包结构-header-body&quot; class=&quot;headerlink&quot; title=&quot;@整体包结构 header+body&quot;&gt;&lt;/a&gt;@整体包结构 header+body&lt;/h2&gt;&lt;p&gt;DNS请求与响应
      
    
    </summary>
    
      <category term="net-protocol" scheme="http://wiki.brewlin.com/categories/net-protocol/"/>
    
      <category term="2.应用层" scheme="http://wiki.brewlin.com/categories/net-protocol/2-%E5%BA%94%E7%94%A8%E5%B1%82/"/>
    
      <category term="dns" scheme="http://wiki.brewlin.com/categories/net-protocol/2-%E5%BA%94%E7%94%A8%E5%B1%82/dns/"/>
    
    
      <category term="go" scheme="http://wiki.brewlin.com/tags/go/"/>
    
      <category term="protocol" scheme="http://wiki.brewlin.com/tags/protocol/"/>
    
      <category term="client" scheme="http://wiki.brewlin.com/tags/client/"/>
    
      <category term="dns" scheme="http://wiki.brewlin.com/tags/dns/"/>
    
  </entry>
  
  <entry>
    <title>dns协议api</title>
    <link href="http://wiki.brewlin.com/wiki/net-protocol/2.%E5%BA%94%E7%94%A8%E5%B1%82/dns/3.dns%E5%8D%8F%E8%AE%AEapi/"/>
    <id>http://wiki.brewlin.com/wiki/net-protocol/2.应用层/dns/3.dns协议api/</id>
    <published>2020-03-06T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"github.com/brewlin/net-protocol/protocol/application/dns"</span></span><br><span class="line"><span class="string">"github.com/brewlin/net-protocol/protocol/header"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">d := dns.NewEndpoint(<span class="string">"www.baidu.com"</span>)</span><br><span class="line">fmt.Println(<span class="string">"DNS lookuphost    : www.baidu.com"</span>)</span><br><span class="line"><span class="keyword">defer</span> d.Close()</span><br><span class="line"></span><br><span class="line">ir,err := d.Resolve();</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _,v := <span class="keyword">range</span> *ir &#123;</span><br><span class="line"><span class="keyword">switch</span> v.Type &#123;</span><br><span class="line"><span class="keyword">case</span> header.A:</span><br><span class="line">fmt.Println(<span class="string">"A(host name)      :"</span>,v.Address)</span><br><span class="line"><span class="keyword">case</span> header.CNAME:</span><br><span class="line">fmt.Println(<span class="string">"CNAME (alias name):"</span>,v.Address)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NewEndpoint-domain"><a href="#NewEndpoint-domain" class="headerlink" title="@NewEndpoint(domain)"></a>@NewEndpoint(domain)</h2><p>新建一个dns客户端，主要负责udp客户端初始化，以及一些主要工作</p><h2 id="Resolve"><a href="#Resolve" class="headerlink" title="@Resolve()"></a>@Resolve()</h2><p>负责发送dns数据包请求，以及解析响应数据</p><h2 id="ir-响应结构体"><a href="#ir-响应结构体" class="headerlink" title="@ir 响应结构体"></a>@ir 响应结构体</h2><p>改结构是一个数组指针，复用数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//DNSResource ansower,authority,additional</span><br><span class="line">type DNSResource struct &#123;</span><br><span class="line">Name uint16</span><br><span class="line">Type DNSResourceType</span><br><span class="line">Class uint16</span><br><span class="line">TTL uint32</span><br><span class="line">RDlen uint16</span><br><span class="line">RData []byte</span><br><span class="line">Address string</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在接收到的数据，包含多条记录，只有A类型是ip地址,所以需要过滤一下<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _,v := <span class="keyword">range</span> *ir &#123;</span><br><span class="line"><span class="keyword">switch</span> v.Type &#123;</span><br><span class="line"><span class="keyword">case</span> header.A:</span><br><span class="line">fmt.Println(<span class="string">"A(host name)      :"</span>,v.Address)</span><br><span class="line"><span class="keyword">case</span> header.CNAME:</span><br><span class="line">fmt.Println(<span class="string">"CNAME (alias name):"</span>,v.Address)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="执行demo"><a href="#执行demo" class="headerlink" title="执行demo"></a>执行demo</h2><p><img src="/images/net-protocol/dns.png" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="net-protocol" scheme="http://wiki.brewlin.com/categories/net-protocol/"/>
    
      <category term="2.应用层" scheme="http://wiki.brewlin.com/categories/net-protocol/2-%E5%BA%94%E7%94%A8%E5%B1%82/"/>
    
      <category term="dns" scheme="http://wiki.brewlin.com/categories/net-protocol/2-%E5%BA%94%E7%94%A8%E5%B1%82/dns/"/>
    
    
      <category term="go" scheme="http://wiki.brewlin.com/tags/go/"/>
    
      <category term="protocol" scheme="http://wiki.brewlin.com/tags/protocol/"/>
    
      <category term="client" scheme="http://wiki.brewlin.com/tags/client/"/>
    
      <category term="dns" scheme="http://wiki.brewlin.com/tags/dns/"/>
    
  </entry>
  
  <entry>
    <title>udp-客户端</title>
    <link href="http://wiki.brewlin.com/wiki/net-protocol/7.%E5%AE%A2%E6%88%B7%E7%AB%AF/udp-%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    <id>http://wiki.brewlin.com/wiki/net-protocol/7.客户端/udp-客户端/</id>
    <published>2020-03-05T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="客户端创建"><a href="#客户端创建" class="headerlink" title="@客户端创建"></a>@客户端创建</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line">_ <span class="string">"github.com/brewlin/net-protocol/pkg/logging"</span></span><br><span class="line"><span class="string">"github.com/brewlin/net-protocol/protocol/transport/udp/client"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">con := client.NewClient(<span class="string">"10.0.2.15"</span>, <span class="number">9000</span>)</span><br><span class="line"><span class="keyword">defer</span> con.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := con.Connect(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">con.Write([]<span class="keyword">byte</span>(<span class="string">"send msg"</span>))</span><br><span class="line">res, err := con.Read()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">con.Close()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// var p [8]byte</span></span><br><span class="line"><span class="comment">// res, _ := con.Readn(p[:1])</span></span><br><span class="line">fmt.Println(<span class="keyword">string</span>(res))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实现了基本的udp客户端连接读写等函数</li><li>依赖tap虚拟网卡，所以需要启动网卡依赖</li><li>依赖<code>ARP</code>,<code>udp</code>,<code>IPV4</code>等协议，所以默认注册了该协议</li><li>注意：<code>默认本地地址为192.168.1.0/24 网段，如果目标ip为127.0.0.1 导致无法arp查询物理层地址,请填写局域网物理机器ip,或者外网ip</code></li></ul><h2 id="NewClient-创建客户端"><a href="#NewClient-创建客户端" class="headerlink" title="@NewClient 创建客户端"></a>@NewClient 创建客户端</h2><p>构造函数传入目的ip,端口等参数，默认返回一个*Client 指针<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">con := client.NewClient(<span class="string">"10.0.2.15"</span>, <span class="number">8080</span>)</span><br></pre></td></tr></table></figure></p><p>注意:<code>默认本地地址为192.168.1.0/24 网段，如果目标ip为127.0.0.1 导致无法arp查询物理层地址</code></p><h2 id="Connect-notice"><a href="#Connect-notice" class="headerlink" title="@Connect ==notice=="></a>@Connect ==notice==</h2><p>不进行真正的连接，只处理一些初始化工作</p><h2 id="Write-写入数据"><a href="#Write-写入数据" class="headerlink" title="@Write 写入数据"></a>@Write 写入数据</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">con.Write([]<span class="keyword">byte</span>(<span class="string">"send msg"</span>))</span><br></pre></td></tr></table></figure><p>直接向对端连接写入数据，错误返回err，udp协议直接通过ip数据包像对端发送数据，因为无连接状态，需要等待对方的icmp报文<br>如果没有收到icmp报文表示发送成功，收到了icmp报文也需要在<code>read()函数</code>中才能标识出来</p><h2 id="Read-读取数据"><a href="#Read-读取数据" class="headerlink" title="@Read 读取数据"></a>@Read <code>读取数据</code></h2><p>==在这里可以判断对端服务是否正常，因为这里会返回用户层icmp报文情况==</p><p>一次只读取一次数据，如果缓存没有读取完，则会返回 <code>ErrWouldBlock</code>错误，可以 在此监听该读方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">res, err := con.Read()</span><br><span class="line">if err != nil &#123;</span><br><span class="line">//这里的错误可能 就会是上面write 写入 对端数据后，对端返回的icmp control msg 表示一些异常情况，如对端端口不可达等</span><br><span class="line">//如果需要阻塞 进行arp查询等一些操作 会自动进行，这里一般不会出现</span><br><span class="line">fmt.Println(err)</span><br><span class="line">con.Close()</span><br><span class="line">return</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Readn-读取n字节数据"><a href="#Readn-读取n字节数据" class="headerlink" title="@Readn 读取n字节数据"></a>@Readn 读取n字节数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// var p [8]byte</span><br><span class="line">// res, _ := con.Readn(p[:1])</span><br><span class="line">// fmt.Println(p)</span><br></pre></td></tr></table></figure><p>可以根据传入参数填充对应的字节数数据，如果不够则会阻塞等待数据填充满为止</p><p>golang 的slice底层是一个指针，所以虽然传值，但是实际会复制指针，那么该slice实际值会在Readn（）函数里被改变填充完后返回</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;客户端创建&quot;&gt;&lt;a href=&quot;#客户端创建&quot; class=&quot;headerlink&quot; title=&quot;@客户端创建&quot;&gt;&lt;/a&gt;@客户端创建&lt;/h2&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
      <category term="net-protocol" scheme="http://wiki.brewlin.com/categories/net-protocol/"/>
    
      <category term="7.客户端" scheme="http://wiki.brewlin.com/categories/net-protocol/7-%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    
    
      <category term="go" scheme="http://wiki.brewlin.com/tags/go/"/>
    
      <category term="protocol" scheme="http://wiki.brewlin.com/tags/protocol/"/>
    
      <category term="udp" scheme="http://wiki.brewlin.com/tags/udp/"/>
    
      <category term="client" scheme="http://wiki.brewlin.com/tags/client/"/>
    
  </entry>
  
  <entry>
    <title>core</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/core/core/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/core/core/</id>
    <published>2020-02-05T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="annotation"><a href="#annotation" class="headerlink" title="@annotation"></a>@annotation</h2><p>注解扫描</p><h2 id="config"><a href="#config" class="headerlink" title="@config"></a>@config</h2><p>配置读取</p><h2 id="container"><a href="#container" class="headerlink" title="@container"></a>@container</h2><p>容器单利初始化</p><h2 id="event"><a href="#event" class="headerlink" title="@event"></a>@event</h2><p>swoole事件封装</p><h2 id="context"><a href="#context" class="headerlink" title="@context"></a>@context</h2><p>携程上下文</p><h2 id="pool"><a href="#pool" class="headerlink" title="@pool"></a>@pool</h2><p>连接池封装</p><h2 id="main"><a href="#main" class="headerlink" title="main"></a>main</h2><p>框架启动、swoole启动</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;annotation&quot;&gt;&lt;a href=&quot;#annotation&quot; class=&quot;headerlink&quot; title=&quot;@annotation&quot;&gt;&lt;/a&gt;@annotation&lt;/h2&gt;&lt;p&gt;注解扫描&lt;/p&gt;
&lt;h2 id=&quot;config&quot;&gt;&lt;a href=&quot;#c
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="core" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/core/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="core" scheme="http://wiki.brewlin.com/tags/core/"/>
    
  </entry>
  
  <entry>
    <title>discovery</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/discovery/discovery/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/discovery/discovery/</id>
    <published>2020-01-31T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="env-配置文件"><a href="#env-配置文件" class="headerlink" title="@env 配置文件"></a>@env 配置文件</h2><p>discovery.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">'consul'</span> =&gt; [</span><br><span class="line">        <span class="string">'address'</span> =&gt; env(<span class="string">"DISCOVERY_ADDRESS"</span>,<span class="string">"127.0.0.1"</span>),</span><br><span class="line">        <span class="string">'port'</span>    =&gt; env(<span class="string">"DISCOVERY_PORT"</span>,<span class="string">"8500"</span>),</span><br><span class="line">        <span class="string">'register'</span> =&gt; [</span><br><span class="line">            <span class="string">'ID'</span>                =&gt; <span class="string">''</span>,</span><br><span class="line">            <span class="comment">//只注册了grpc 服务，其他都是私有的</span></span><br><span class="line">            <span class="comment">//tcp 和websocket   通过nginx负载均衡即可</span></span><br><span class="line">            <span class="string">'Name'</span>              =&gt; <span class="string">'grpc-im-cloud-node'</span>,</span><br><span class="line">            <span class="string">'Tags'</span>              =&gt; [],</span><br><span class="line">            <span class="string">'enableTagOverride'</span>=&gt; <span class="keyword">false</span>,</span><br><span class="line">            <span class="string">'Address'</span>           =&gt; env(<span class="string">"APP_HOST"</span>,<span class="string">"127.0.0.1"</span>),</span><br><span class="line">            <span class="string">'Port'</span>              =&gt; (int)env(<span class="string">"GRPC_PORT"</span>,<span class="number">9500</span>),</span><br><span class="line">            <span class="string">'Check'</span>             =&gt; [</span><br><span class="line">                <span class="string">'id'</span>       =&gt; <span class="string">''</span>,</span><br><span class="line">                <span class="string">'name'</span>     =&gt; <span class="string">''</span>,</span><br><span class="line">                <span class="string">'http'</span>      =&gt; <span class="string">"http://127.0.0.1:"</span>.env(<span class="string">'DISCOVERY_CHECK_PORT'</span>,<span class="number">9500</span>).<span class="string">"/health"</span>,</span><br><span class="line">                <span class="string">'interval'</span> =&gt; <span class="string">"10s"</span>,</span><br><span class="line">                <span class="string">'timeout'</span>  =&gt; <span class="string">"10s"</span>,</span><br><span class="line">            ],</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">'discovery'</span> =&gt; [</span><br><span class="line">            <span class="string">'name'</span> =&gt; <span class="string">'grpc-im-logic-node'</span>,</span><br><span class="line">            <span class="string">'dc'</span> =&gt; <span class="string">'dc1'</span>,</span><br><span class="line">            <span class="string">'near'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">            <span class="string">'tag'</span> =&gt;<span class="string">''</span>,</span><br><span class="line">            <span class="string">'passing'</span> =&gt; <span class="keyword">true</span></span><br><span class="line">        ]</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure></p><h2 id="register-注册服务"><a href="#register-注册服务" class="headerlink" title="@register 注册服务"></a>@register 注册服务</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$registerStatus = provider()-&gt;select()-&gt;registerService();</span><br><span class="line"><span class="keyword">if</span>(!$registerStatus)&#123;</span><br><span class="line">    CLog::error(<span class="string">"consul register false sleep 1 sec to reregiseter"</span>);</span><br><span class="line">    Coroutine::sleep(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="deregister-注销节点"><a href="#deregister-注销节点" class="headerlink" title="@deregister 注销节点"></a>@deregister 注销节点</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注销节点</span></span><br><span class="line">$discovery = config(<span class="string">"discovery"</span>);</span><br><span class="line">provider()-&gt;select()-&gt;deregisterService($discovery[<span class="string">'consul'</span>][<span class="string">"register"</span>][<span class="string">'Name'</span>]);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;env-配置文件&quot;&gt;&lt;a href=&quot;#env-配置文件&quot; class=&quot;headerlink&quot; title=&quot;@env 配置文件&quot;&gt;&lt;/a&gt;@env 配置文件&lt;/h2&gt;&lt;p&gt;discovery.php&lt;br&gt;&lt;figure class=&quot;highlight ph
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="discovery" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/discovery/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="discovery" scheme="http://wiki.brewlin.com/tags/discovery/"/>
    
  </entry>
  
  <entry>
    <title>db</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/database/db/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/database/db/</id>
    <published>2020-01-29T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置结果集为-array"><a href="#设置结果集为-array" class="headerlink" title="@设置结果集为 array"></a>@设置结果集为 array</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Core</span>\<span class="title">Event</span>\<span class="title">EventDispatcherInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Core</span>\<span class="title">Event</span>\<span class="title">EventEnum</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Core</span>\<span class="title">Event</span>\<span class="title">Mapping</span>\<span class="title">Event</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Hyperf</span>\<span class="title">Database</span>\<span class="title">Events</span>\<span class="title">StatementPrepared</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PDO</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Event</span>(alias=EventEnum::DbFetchMode)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FetchModeEvent</span> <span class="keyword">implements</span> <span class="title">EventDispatcherInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $event</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dispatch</span><span class="params">(...$param)</span></span>&#123;</span><br><span class="line">        $event = $param[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span> ($event <span class="keyword">instanceof</span> StatementPrepared) &#123;</span><br><span class="line">            $event-&gt;statement-&gt;setFetchMode(PDO::FETCH_ASSOC);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="db-操作"><a href="#db-操作" class="headerlink" title="@db 操作"></a>@db 操作</h2><p><a href="https://hyperf.wiki/#/zh-cn/db/querybuilder">https://hyperf.wiki/#/zh-cn/db/querybuilder</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;设置结果集为-array&quot;&gt;&lt;a href=&quot;#设置结果集为-array&quot; class=&quot;headerlink&quot; title=&quot;@设置结果集为 array&quot;&gt;&lt;/a&gt;@设置结果集为 array&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="database" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/database/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="database" scheme="http://wiki.brewlin.com/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>queue</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/queue/queue/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/queue/queue/</id>
    <published>2020-01-28T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="producer-生产数据"><a href="#producer-生产数据" class="headerlink" title="@producer 生产数据"></a>@producer 生产数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Lib</span>\<span class="title">Producer</span>;</span><br><span class="line"><span class="comment">/** <span class="doctag">@var</span> Producer $producers */</span></span><br><span class="line">$producers = \bean(Producer::class);</span><br><span class="line"><span class="comment">//发送到队列里</span></span><br><span class="line">producer()-&gt;produce($producers-&gt;producer($pushmsg));</span><br></pre></td></tr></table></figure><h2 id="consumer-消费队列数据"><a href="#consumer-消费队列数据" class="headerlink" title="@consumer 消费队列数据"></a>@consumer 消费队列数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">ImQueue</span>\<span class="title">Amqp</span>\<span class="title">Message</span>\<span class="title">ConsumerMessage</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">ImQueue</span>\<span class="title">Amqp</span>\<span class="title">Result</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Class Consumer</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span> App\Lib</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> <span class="keyword">extends</span> <span class="title">ConsumerMessage</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;setExchange(env(<span class="string">"EXCHANGE"</span>));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;setQueue(env(<span class="string">"QUEUE"</span>));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;setRoutingKey(env(<span class="string">"ROUTE_KEY"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 主流程消费数据入口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> PushMsg $data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">consume</span><span class="params">($data)</span>: <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result::ACK;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重新排队</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isRequeue</span><span class="params">()</span>: <span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;producer-生产数据&quot;&gt;&lt;a href=&quot;#producer-生产数据&quot; class=&quot;headerlink&quot; title=&quot;@producer 生产数据&quot;&gt;&lt;/a&gt;@producer 生产数据&lt;/h2&gt;&lt;figure class=&quot;highlight ph
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="queue" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/queue/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="queue" scheme="http://wiki.brewlin.com/tags/queue/"/>
    
  </entry>
  
  <entry>
    <title>grpc</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/grpc/grpc/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/grpc/grpc/</id>
    <published>2020-01-27T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="build"><a href="#build" class="headerlink" title="@build"></a>@build</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; cd pkg/grpc/bin</span><br><span class="line">&gt; sh  gen.sh</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><h2 id="method-grpc-调用"><a href="#method-grpc-调用" class="headerlink" title="@method grpc 调用"></a>@method grpc 调用</h2><p>组件封装有连接池机制，复用多个连接<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Grpc</span>\<span class="title">Client</span>\<span class="title">GrpcLogicClient</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Im</span>\<span class="title">Cloud</span>\<span class="title">Operation</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Im</span>\<span class="title">Logic</span>\<span class="title">HeartbeatReq</span>;</span><br><span class="line"></span><br><span class="line">$heartBeatReq = <span class="keyword">new</span> HeartbeatReq();</span><br><span class="line">$host = env(<span class="string">"APP_HOST"</span>,<span class="string">"127.0.0.1"</span>).<span class="string">":"</span>.env(<span class="string">"GRPC_PORT"</span>,<span class="number">9500</span>);</span><br><span class="line">$heartBeatReq-&gt;setServer($host);</span><br><span class="line">$heartBeatReq-&gt;setKey($key);</span><br><span class="line">$heartBeatReq-&gt;setMid($mid);</span><br><span class="line">GrpcLogicClient::Heartbeat($grpcServer,$heartBeatReq);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;build&quot;&gt;&lt;a href=&quot;#build&quot; class=&quot;headerlink&quot; title=&quot;@build&quot;&gt;&lt;/a&gt;@build&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="grpc" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/grpc/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="grpc" scheme="http://wiki.brewlin.com/tags/grpc/"/>
    
  </entry>
  
  <entry>
    <title>memory</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/memeory/memeory/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/memeory/memeory/</id>
    <published>2020-01-26T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="construct"><a href="#construct" class="headerlink" title="@construct"></a>@construct</h2><p>使用bean注解自动注入到container中，在swoole启动前就需要申请好内存并初始化，所以需要使用bean注解<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Core</span>\<span class="title">Container</span>\<span class="title">Mapping</span>\<span class="title">Bean</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Memory</span>\<span class="title">Table</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Memory</span>\<span class="title">Table</span>\<span class="title">Type</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Memory</span>\<span class="title">Table</span>\<span class="title">MemoryTable</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Bean</span>()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CloudClient</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> $table = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CloudClient constructor.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $memorySize = (int)env(<span class="string">"MEMORY_TABLE"</span>,<span class="number">1000</span>);</span><br><span class="line">        $column = [</span><br><span class="line">            <span class="string">"Address"</span> =&gt; [Type::String,<span class="number">20</span>],</span><br><span class="line">            <span class="string">"Port"</span>    =&gt; [Type::String,<span class="number">10</span>],</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">self</span>::$table = Table::create($memorySize,$column);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Table：：create-创建共享内存"><a href="#Table：：create-创建共享内存" class="headerlink" title="@Table：：create 创建共享内存"></a>@Table：：create 创建共享内存</h2><ul><li>size  内存大小</li><li>column 数据结构</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;construct&quot;&gt;&lt;a href=&quot;#construct&quot; class=&quot;headerlink&quot; title=&quot;@construct&quot;&gt;&lt;/a&gt;@construct&lt;/h2&gt;&lt;p&gt;使用bean注解自动注入到container中，在swoole启动前就需要申请好
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="memeory" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/memeory/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="memory" scheme="http://wiki.brewlin.com/tags/memory/"/>
    
  </entry>
  
  <entry>
    <title>process</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/process/process/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/process/process/</id>
    <published>2020-01-25T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="construct"><a href="#construct" class="headerlink" title="@construct"></a>@construct</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Process</span>\<span class="title">Contract</span>\<span class="title">AbstractProcess</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoProcess</span> <span class="keyword">extends</span> <span class="title">AbstractProcess</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="string">"process_name"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">()</span>: <span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义子进程 执行入口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Process $process</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">(Process $process)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="register-注册自定义进程"><a href="#register-注册自定义进程" class="headerlink" title="@register 注册自定义进程"></a>@register 注册自定义进程</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ProcessManager::register(<span class="string">"demo-process"</span>,<span class="keyword">new</span> DemoProcess());</span><br></pre></td></tr></table></figure><h2 id="start-启动"><a href="#start-启动" class="headerlink" title="@start 启动"></a>@start 启动</h2><p>主动伴随swoole进程模型启动，交由swoole mangager进程管理</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;construct&quot;&gt;&lt;a href=&quot;#construct&quot; class=&quot;headerlink&quot; title=&quot;@construct&quot;&gt;&lt;/a&gt;@construct&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="process" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/process/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="process" scheme="http://wiki.brewlin.com/tags/process/"/>
    
  </entry>
  
  <entry>
    <title>redis</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/redis/redis/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/redis/redis/</id>
    <published>2020-01-23T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="class"><a href="#class" class="headerlink" title="@class"></a>@class</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Redis::hSet(<span class="string">"hkey"</span>,$key,$server);</span><br></pre></td></tr></table></figure><h2 id="api"><a href="#api" class="headerlink" title="@api"></a>@api</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">* @method <span class="keyword">static</span> int append(string $key, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> blPop(<span class="keyword">array</span> $keys, int $timeout)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> brPop(<span class="keyword">array</span> $keys, int $timeout)</span><br><span class="line">* @method <span class="keyword">static</span> string brpoplpush(string $srcKey, string $dstKey, int $timeout)</span><br><span class="line">* @method <span class="keyword">static</span> string decr(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int decrBy(string $key, int $value)</span><br><span class="line">* @method <span class="keyword">static</span> mixed <span class="keyword">eval</span>(string $script, <span class="keyword">array</span> $args = [], int $numKeys = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> mixed evalSha(string $scriptSha, <span class="keyword">array</span> $args = [], int $numKeys = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> bool exists(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int geoAdd(string $key, float $longitude, float $latitude, string $member)</span><br><span class="line">* @method <span class="keyword">static</span> float geoDist(string $key, string $member1, string $member2, string $unit = <span class="string">'m'</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> geohash(string $key, string $member1, string $member2 = <span class="keyword">null</span>, string $memberN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> geopos(string $key, string $member1, string $member2 = <span class="keyword">null</span>, string $memberN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> mixed|bool get(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int getBit(string $key, int $offset)</span><br><span class="line">* @method <span class="keyword">static</span> int getOption(string $name)</span><br><span class="line">* @method <span class="keyword">static</span> string getRange(string $key, int $start, int $end)</span><br><span class="line">* @method <span class="keyword">static</span> string getSet(string $key, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> string hDel(string $key, string $hashKey1, string $hashKey2 = <span class="keyword">null</span>, string $hashKeyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> bool hExists(string $key, string $hashKey)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> hGet(string $key, <span class="keyword">array</span> $hashKey)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> hGetAll(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int hIncrBy(string $key, string $hashKey, int $value)</span><br><span class="line">* @method <span class="keyword">static</span> float hIncrByFloat(string $key, string $field, float $increment)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> hKeys(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int hLen(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int hSet(string $key, string $hashKey, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> bool hSetNx(string $key, string $hashKey, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> hVals(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> hScan(string $key, int &amp;$iterator, string $pattern = <span class="keyword">null</span>, int $count = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int incr(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int incrBy(string $key, int $value)</span><br><span class="line">* @method <span class="keyword">static</span> float incrByFloat(string $key, float $increment)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> info(string $option = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> string|bool lGet(string $key, int $index)</span><br><span class="line">* @method <span class="keyword">static</span> int lInsert(string $key, int $position, string $pivot, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> string|bool lPop(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int|bool lPush(string $key, string $value1, string $value2 = <span class="keyword">null</span>, string $valueN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int|bool lPushx(string $key, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> bool lSet(string $key, int $index, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> int msetnx(<span class="keyword">array</span> $array)</span><br><span class="line">* @method <span class="keyword">static</span> bool persist(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> bool pExpire(string $key, int $ttl)</span><br><span class="line">* @method <span class="keyword">static</span> bool pExpireAt(string $key, int $timestamp)</span><br><span class="line">* @method <span class="keyword">static</span> bool psetex(string $key, int $ttl, $value)</span><br><span class="line">* @method <span class="keyword">static</span> int pttl(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> string rPop(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int|bool rPush(string $key, string $value1, string $value2 = <span class="keyword">null</span>, string $valueN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int|bool rPushx(string $key, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> mixed rawCommand(string|<span class="keyword">array</span> $nodeParams, string $command, mixed $arguments)</span><br><span class="line">* @method <span class="keyword">static</span> bool renameNx(string $srcKey, string $dstKey)</span><br><span class="line">* @method <span class="keyword">static</span> bool restore(string $key, int $ttl, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> string rpoplpush(string $srcKey, string $dstKey)</span><br><span class="line">* @method <span class="keyword">static</span> int sAdd(string $key, string $value1, string $value2 = <span class="keyword">null</span>, string $valueN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int sAddArray(string $key, <span class="keyword">array</span> $valueArray)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> sDiff(string $key1, string $key2, string $keyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int sDiffStore(string $dstKey, string $key1, string $key2, string $keyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> sInter(string $key1, string $key2, string $keyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int|bool sInterStore(string $dstKey, string $key1, string $key2, string $keyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> sMembers(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> bool sMove(string $srcKey, string $dstKey, string $member)</span><br><span class="line">* @method <span class="keyword">static</span> string|bool sPop(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> string|<span class="keyword">array</span>|bool sRandMember(string $key, int $count = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> sUnion(string $key1, string $key2, string $keyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int sUnionStore(string $dstKey, string $key1, string $key2, string $keyN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span>|bool scan(int &amp;$iterator, string $pattern = <span class="keyword">null</span>, int $count = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> mixed script(string|<span class="keyword">array</span> $nodeParams, string $command, string $script)</span><br><span class="line">* @method <span class="keyword">static</span> bool set(string $key, $value, int $timeout = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int setBit(string $key, int $offset, int $value)</span><br><span class="line">* @method <span class="keyword">static</span> string setRange(string $key, int $offset, $value)</span><br><span class="line">* @method <span class="keyword">static</span> int setex(string $key, int $ttl, $value)</span><br><span class="line">* @method <span class="keyword">static</span> bool setnx(string $key, $value)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> sort(string $key, <span class="keyword">array</span> $option = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> sScan(string $key, int &amp;$iterator, string $pattern = <span class="keyword">null</span>, int $count = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int strlen(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int ttl(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int type(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> void unwatch()</span><br><span class="line">* @method <span class="keyword">static</span> void watch(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int zCard(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> int zCount(string $key, int $start, int $end)</span><br><span class="line">* @method <span class="keyword">static</span> float zIncrBy(string $key, float $value, string $member)</span><br><span class="line">* @method <span class="keyword">static</span> int zLexCount(string $key, int $min, int $max)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRange(string $key, int $start, int $end, bool $withscores = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRangeByLex(string $key, int $min, int $max, int $offset = <span class="keyword">null</span>, int $limit = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRangeByScore(string $key, string $start, string $end, <span class="keyword">array</span> $options = [])</span><br><span class="line">* @method <span class="keyword">static</span> int zRank(string $key, string $member)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRemRangeByLex(string $key, int $min, int $max)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRevRange(string $key, int $start, int $end, bool $withscore = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRevRangeByLex(string $key, int $min, int $max, int $offset = <span class="keyword">null</span>, int $limit = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zRevRangeByScore(string $key, int $start, int $end, <span class="keyword">array</span> $options = [])</span><br><span class="line">* @method <span class="keyword">static</span> int zRevRank(string $key, string $member)</span><br><span class="line">* @method <span class="keyword">static</span> float zScore(string $key, float $member)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> zScan(string $key, int &amp;$iterator, string $pattern = <span class="keyword">null</span>, int $count = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int del(string $key1, string $key2 = <span class="keyword">null</span>, string $key3 = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> bool expire(string $key, int $ttl)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> keys(string $pattern)</span><br><span class="line">* @method <span class="keyword">static</span> int lLen(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> string|bool lIndex(string $key, int $index)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> lRange(string $key, int $start, int $end)</span><br><span class="line">* @method <span class="keyword">static</span> int|bool lRem(string $key, string $value, int $count)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span>|bool lTrim(string $key, int $start, int $stop)</span><br><span class="line">* @method <span class="keyword">static</span> bool rename(string $srcKey, string $dstKey)</span><br><span class="line">* @method <span class="keyword">static</span> int sCard(string $key)</span><br><span class="line">* @method <span class="keyword">static</span> bool sIsMember(string $key, string $value)</span><br><span class="line">* @method <span class="keyword">static</span> int sRem(string $key, string $member1, string $member2 = <span class="keyword">null</span>, string $memberN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int zRem(string $key, string $member1, string $member2 = <span class="keyword">null</span>, string $memberN = <span class="keyword">null</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int zRemRangeByRank(string $key, int $start, int $end)</span><br><span class="line">* @method <span class="keyword">static</span> int zRemRangeByScore(string $key, float|string $start, float|string $end)</span><br><span class="line">* @method <span class="keyword">static</span> int zInterStore(string $Output, <span class="keyword">array</span> $ZSetKeys, <span class="keyword">array</span> $Weights = <span class="keyword">null</span>, string $aggregateFunction = <span class="string">'SUM'</span>)</span><br><span class="line">* @method <span class="keyword">static</span> int zUnionStore(string $Output, <span class="keyword">array</span> $ZSetKeys, <span class="keyword">array</span> $Weights = <span class="keyword">null</span>, string $aggregateFunction = <span class="string">'SUM'</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> hMGet(string $key, <span class="keyword">array</span> $keys)</span><br><span class="line">* @method <span class="keyword">static</span> bool hMSet(string $key, <span class="keyword">array</span> $keyValues)</span><br><span class="line">* @method <span class="keyword">static</span> int zAdd(string $key, <span class="keyword">array</span> $scoreValues)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> mget(<span class="keyword">array</span> $keys)</span><br><span class="line">* @method <span class="keyword">static</span> bool mset(<span class="keyword">array</span> $keyValues, int $ttl = <span class="number">0</span>)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> pipeline(callable $callback)</span><br><span class="line">* @method <span class="keyword">static</span> <span class="keyword">array</span> transaction(callable $callback)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;class&quot;&gt;&lt;a href=&quot;#class&quot; class=&quot;headerlink&quot; title=&quot;@class&quot;&gt;&lt;/a&gt;@class&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="redis" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/redis/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="redis" scheme="http://wiki.brewlin.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>log</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/log/log/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/log/log/</id>
    <published>2020-01-22T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Log-输出到日志文件-amp-amp-Clog-输出到终端"><a href="#Log-输出到日志文件-amp-amp-Clog-输出到终端" class="headerlink" title="@Log  输出到日志文件 &amp;&amp; Clog 输出到终端"></a>@Log  输出到日志文件 &amp;&amp; Clog 输出到终端</h2><h2 id="emergency-level"><a href="#emergency-level" class="headerlink" title="@emergency level"></a>@emergency level</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Log::emergency(message,param);</span><br><span class="line">CLog::emergency(message,param);</span><br></pre></td></tr></table></figure><h2 id="info-level"><a href="#info-level" class="headerlink" title="@info level"></a>@info level</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Log::info(message,param);</span><br><span class="line">CLog::info(message,param);</span><br></pre></td></tr></table></figure><h2 id="error-level"><a href="#error-level" class="headerlink" title="@error level"></a>@error level</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Log::error(message,param);</span><br><span class="line">CLog::error(message,param);</span><br></pre></td></tr></table></figure><h2 id="debug-level"><a href="#debug-level" class="headerlink" title="@debug level"></a>@debug level</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Log::debug(message,param);</span><br><span class="line">CLog::debug(message,param);</span><br></pre></td></tr></table></figure><h2 id="alert-level"><a href="#alert-level" class="headerlink" title="@alert level"></a>@alert level</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Log::alert(message,param);</span><br><span class="line">CLog::alert(message,param);</span><br></pre></td></tr></table></figure><h2 id="warning-level"><a href="#warning-level" class="headerlink" title="@warning level"></a>@warning level</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Log::warning(message,param);</span><br><span class="line">CLog::warning(message,param);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Log-输出到日志文件-amp-amp-Clog-输出到终端&quot;&gt;&lt;a href=&quot;#Log-输出到日志文件-amp-amp-Clog-输出到终端&quot; class=&quot;headerlink&quot; title=&quot;@Log  输出到日志文件 &amp;amp;&amp;amp; Clog 输出
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="log" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/log/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="log" scheme="http://wiki.brewlin.com/tags/log/"/>
    
  </entry>
  
  <entry>
    <title>task</title>
    <link href="http://wiki.brewlin.com/wiki/im-cloud/3.%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/task/task/"/>
    <id>http://wiki.brewlin.com/wiki/im-cloud/3.相关组件/task/task/</id>
    <published>2020-01-21T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="composer"><a href="#composer" class="headerlink" title="@composer"></a>@composer</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"require"</span>:&#123;</span><br><span class="line">    <span class="string">"brewlin/im-task"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="class"><a href="#class" class="headerlink" title="@class"></a>@class</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="diliver-发送异步任务"><a href="#diliver-发送异步任务" class="headerlink" title="@diliver 发送异步任务"></a>@diliver 发送异步任务</h2><p>通过<code>deliver</code>方法可以直接在task进程中执行对应object的方法到达异步执行任务<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">namespace</span> <span class="title">example</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** <span class="doctag">@var</span> Task $task */</span></span><br><span class="line">\bean(Task::class)-&gt;deliver(example::class,<span class="string">"method"</span>,[arg1,arg2,arg3.....]);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;composer&quot;&gt;&lt;a href=&quot;#composer&quot; class=&quot;headerlink&quot; title=&quot;@composer&quot;&gt;&lt;/a&gt;@composer&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
      <category term="im-cloud" scheme="http://wiki.brewlin.com/categories/im-cloud/"/>
    
      <category term="3.相关组件" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="task" scheme="http://wiki.brewlin.com/categories/im-cloud/3-%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/task/"/>
    
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="swoole" scheme="http://wiki.brewlin.com/tags/swoole/"/>
    
      <category term="coroutine" scheme="http://wiki.brewlin.com/tags/coroutine/"/>
    
      <category term="task" scheme="http://wiki.brewlin.com/tags/task/"/>
    
  </entry>
  
  <entry>
    <title>runtime</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/hook/runtime/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/hook/runtime/</id>
    <published>2020-01-13T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Lib-runtime-enableCorutine-启动hook机制"><a href="#Lib-runtime-enableCorutine-启动hook机制" class="headerlink" title="Lib\runtime::enableCorutine 启动hook机制"></a><code>Lib\runtime::enableCorutine</code> 启动hook机制</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">Lib\Runtime::enableCoroutine();</span><br><span class="line"></span><br><span class="line">cgo(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sleep(<span class="number">1</span>); <span class="comment">// == Cco::sleep(1);</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Lib-runtime-enableCorutine-启动hook机制&quot;&gt;&lt;a href=&quot;#Lib-runtime-enableCorutine-启动hook机制&quot; class=&quot;headerlink&quot; title=&quot;Lib\runtime::enableCor
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="hook" scheme="http://wiki.brewlin.com/categories/c-ext/hook/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="hook" scheme="http://wiki.brewlin.com/tags/hook/"/>
    
      <category term="runtime" scheme="http://wiki.brewlin.com/tags/runtime/"/>
    
  </entry>
  
  <entry>
    <title>sleep</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/hook/sleep/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/hook/sleep/</id>
    <published>2020-01-13T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<p>在扩展内替换原生php内置sleep函数，使原有基于sleep的代码自动进行替换为协程<code>Cco::sleep()</code>调用</p><h2 id="协程sleep"><a href="#协程sleep" class="headerlink" title="@协程sleep"></a>@协程sleep</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cgo(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Cco::sleep(<span class="number">1</span>);<span class="comment">//协程切换</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="原生sleep"><a href="#原生sleep" class="headerlink" title="@原生sleep"></a>@原生sleep</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cgo(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sleep(<span class="number">1</span>);<span class="comment">//进程阻塞</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="hook-sleep"><a href="#hook-sleep" class="headerlink" title="@hook sleep"></a>@hook sleep</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Lib\Runtime::enableCoroutine();</span><br><span class="line">cgo(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sleep(<span class="number">1</span>);<span class="comment">//协程切换</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在扩展内替换原生php内置sleep函数，使原有基于sleep的代码自动进行替换为协程&lt;code&gt;Cco::sleep()&lt;/code&gt;调用&lt;/p&gt;
&lt;h2 id=&quot;协程sleep&quot;&gt;&lt;a href=&quot;#协程sleep&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="hook" scheme="http://wiki.brewlin.com/categories/c-ext/hook/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="hook" scheme="http://wiki.brewlin.com/tags/hook/"/>
    
      <category term="sleep" scheme="http://wiki.brewlin.com/tags/sleep/"/>
    
  </entry>
  
  <entry>
    <title>event</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/event/event/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/event/event/</id>
    <published>2020-01-12T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lib_event_init();</span><br><span class="line"></span><br><span class="line">dosthing...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lib_event_wait();</span><br></pre></td></tr></table></figure><h2 id="lib-event-init-初始化全局变量和申请内存空间"><a href="#lib-event-init-初始化全局变量和申请内存空间" class="headerlink" title="@lib_event_init() 初始化全局变量和申请内存空间"></a>@lib_event_init() 初始化全局变量和申请内存空间</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LibG;</span><br><span class="line">LibG.poll</span><br><span class="line">LibG.poll.epollfd;</span><br></pre></td></tr></table></figure><h2 id="lib-event-wait-轮训获取可读可写事件"><a href="#lib-event-wait-轮训获取可读可写事件" class="headerlink" title="@lib_event_wait() 轮训获取可读可写事件"></a>@lib_event_wait() 轮训获取可读可写事件</h2><p><code>timer、socket、server、sleep</code>等模块依赖于event，所以需要显示调用event<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while(LibG.running)&#123;</span><br><span class="line">    epoll_wait(....)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="event" scheme="http://wiki.brewlin.com/categories/c-ext/event/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="coroutine" scheme="http://wiki.brewlin.com/tags/coroutine/"/>
    
      <category term="epoll" scheme="http://wiki.brewlin.com/tags/epoll/"/>
    
  </entry>
  
  <entry>
    <title>协程socket</title>
    <link href="http://wiki.brewlin.com/wiki/c-ext/coroutine/%E5%8D%8F%E7%A8%8Bsocket/"/>
    <id>http://wiki.brewlin.com/wiki/c-ext/coroutine/协程socket/</id>
    <published>2020-01-12T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<p>创建协程版socket，封装所有协程api，所有阻塞操作都会触发协程切换</p><h2 id="Lib-Coroutine-Socket"><a href="#Lib-Coroutine-Socket" class="headerlink" title="@Lib\Coroutine\Socket"></a>@Lib\Coroutine\Socket</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">lib_event_init();</span><br><span class="line"></span><br><span class="line">cgo(<span class="function"><span class="keyword">function</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $socket = <span class="keyword">new</span> Lib\Coroutine\Socket(AF_INET, SOCK_STREAM, IPPROTO_IP);</span><br><span class="line">    <span class="keyword">if</span>($socket-&gt;fd &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        var_dump(<span class="string">"err"</span>);<span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $socket-&gt;bind(<span class="string">"127.0.0.1"</span>, <span class="number">9999</span>);</span><br><span class="line">    $socket-&gt;listen();</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        $conn = $socket-&gt;accept();</span><br><span class="line">        cgo(<span class="function"><span class="keyword">function</span> <span class="params">()</span> <span class="title">use</span><span class="params">($conn)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $data = $conn-&gt;recv();</span><br><span class="line">            $responseStr = <span class="string">"HTTP/1.1 200 OK\r\n</span></span><br><span class="line"><span class="string">                        Content-Type: text/html\r\n</span></span><br><span class="line"><span class="string">                        Connection: close\r\n</span></span><br><span class="line"><span class="string">                        Content-Length: 11\r\n\r\n</span></span><br><span class="line"><span class="string">                        hello world\r\n"</span>;</span><br><span class="line">            $conn-&gt;send($responseStr);</span><br><span class="line">            $conn-&gt;close();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">lib_event_wait();</span><br></pre></td></tr></table></figure><h2 id="Constant"><a href="#Constant" class="headerlink" title="@Constant"></a>@Constant</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AF_INET, SOCK_STREAM, IPPROTO_IP</span><br></pre></td></tr></table></figure><h2 id="construct-初始化"><a href="#construct-初始化" class="headerlink" title="@__construct 初始化"></a>@__construct 初始化</h2><h2 id="bind-绑定端口"><a href="#bind-绑定端口" class="headerlink" title="@bind  绑定端口"></a>@bind  绑定端口</h2><h2 id="listen-启动监听"><a href="#listen-启动监听" class="headerlink" title="@listen 启动监听"></a>@listen 启动监听</h2><h2 id="accept-接收新连接"><a href="#accept-接收新连接" class="headerlink" title="@accept 接收新连接"></a>@accept 接收新连接</h2><h2 id="recv-读取缓冲区数据"><a href="#recv-读取缓冲区数据" class="headerlink" title="@recv   读取缓冲区数据"></a>@recv   读取缓冲区数据</h2><h2 id="send-向对端连接写入数据"><a href="#send-向对端连接写入数据" class="headerlink" title="@send   向对端连接写入数据"></a>@send   向对端连接写入数据</h2><h2 id="close-关闭连接"><a href="#close-关闭连接" class="headerlink" title="@close  关闭连接"></a>@close  关闭连接</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;创建协程版socket，封装所有协程api，所有阻塞操作都会触发协程切换&lt;/p&gt;
&lt;h2 id=&quot;Lib-Coroutine-Socket&quot;&gt;&lt;a href=&quot;#Lib-Coroutine-Socket&quot; class=&quot;headerlink&quot; title=&quot;@Lib\Cor
      
    
    </summary>
    
      <category term="c-ext" scheme="http://wiki.brewlin.com/categories/c-ext/"/>
    
      <category term="coroutine" scheme="http://wiki.brewlin.com/categories/c-ext/coroutine/"/>
    
    
      <category term="linux" scheme="http://wiki.brewlin.com/tags/linux/"/>
    
      <category term="c" scheme="http://wiki.brewlin.com/tags/c/"/>
    
      <category term="php" scheme="http://wiki.brewlin.com/tags/php/"/>
    
      <category term="ext" scheme="http://wiki.brewlin.com/tags/ext/"/>
    
      <category term="coroutine" scheme="http://wiki.brewlin.com/tags/coroutine/"/>
    
      <category term="epoll" scheme="http://wiki.brewlin.com/tags/epoll/"/>
    
      <category term="socket" scheme="http://wiki.brewlin.com/tags/socket/"/>
    
      <category term="tcp" scheme="http://wiki.brewlin.com/tags/tcp/"/>
    
  </entry>
  
  <entry>
    <title>tap</title>
    <link href="http://wiki.brewlin.com/wiki/net-protocol/6.%E7%89%A9%E7%90%86%E5%B1%82/tap/"/>
    <id>http://wiki.brewlin.com/wiki/net-protocol/6.物理层/tap/</id>
    <published>2020-01-10T13:28:59.000Z</published>
    <updated>2020-03-31T06:31:01.651Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-创建一个tap模式的虚拟网卡tap0"><a href="#1-创建一个tap模式的虚拟网卡tap0" class="headerlink" title="1.创建一个tap模式的虚拟网卡tap0"></a>1.创建一个tap模式的虚拟网卡tap0</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip tuntap add mode tap tap0</span><br></pre></td></tr></table></figure><h3 id="2-开启该网卡"><a href="#2-开启该网卡" class="headerlink" title="2.开启该网卡"></a>2.开启该网卡</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip link set tap0 up</span><br></pre></td></tr></table></figure><h3 id="3-设置该网卡的ip及掩码-添加路由"><a href="#3-设置该网卡的ip及掩码-添加路由" class="headerlink" title="3.设置该网卡的ip及掩码 |添加路由"></a>3.设置该网卡的ip及掩码 |添加路由</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route add 192.168.1.0/24 dev tap0</span><br><span class="line">//增加ip地址</span><br><span class="line">sudo ip addr add 192.168.1.1/24 dev tap0</span><br></pre></td></tr></table></figure><h3 id="4-添加网关"><a href="#4-添加网关" class="headerlink" title="4.添加网关"></a>4.添加网关</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route add default via 192.168.1.2 dev tap0</span><br></pre></td></tr></table></figure><h2 id="删除网卡"><a href="#删除网卡" class="headerlink" title="@删除网卡"></a>@删除网卡</h2><h3 id="1-删除虚拟网卡"><a href="#1-删除虚拟网卡" class="headerlink" title="1.删除虚拟网卡"></a>1.删除虚拟网卡</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip tuntap del mode tap tap0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-创建一个tap模式的虚拟网卡tap0&quot;&gt;&lt;a href=&quot;#1-创建一个tap模式的虚拟网卡tap0&quot; class=&quot;headerlink&quot; title=&quot;1.创建一个tap模式的虚拟网卡tap0&quot;&gt;&lt;/a&gt;1.创建一个tap模式的虚拟网卡tap0&lt;/h3&gt;&lt;
      
    
    </summary>
    
      <category term="net-protocol" scheme="http://wiki.brewlin.com/categories/net-protocol/"/>
    
      <category term="6.物理层" scheme="http://wiki.brewlin.com/categories/net-protocol/6-%E7%89%A9%E7%90%86%E5%B1%82/"/>
    
    
      <category term="go" scheme="http://wiki.brewlin.com/tags/go/"/>
    
      <category term="protocol" scheme="http://wiki.brewlin.com/tags/protocol/"/>
    
      <category term="eth" scheme="http://wiki.brewlin.com/tags/eth/"/>
    
      <category term="tap" scheme="http://wiki.brewlin.com/tags/tap/"/>
    
      <category term="tool" scheme="http://wiki.brewlin.com/tags/tool/"/>
    
  </entry>
  
</feed>
